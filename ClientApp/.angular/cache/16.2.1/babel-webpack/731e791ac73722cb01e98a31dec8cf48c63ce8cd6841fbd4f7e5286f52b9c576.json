{"ast":null,"code":"var _class;\nimport { Component, Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class HouseEditComponent {\n  constructor(modalService, route, router, houseService) {\n    this.modalService = modalService;\n    this.route = route;\n    this.router = router;\n    this.houseService = houseService;\n    this.isManager = false;\n    this.isResident = false;\n    this.housedetails = {\n      id: 0,\n      number: 0,\n      street: '',\n      city: '',\n      country: '',\n      postcode: ''\n    };\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.houseId = +params['id'];\n      this.getHouseDetails(this.houseId).subscribe({\n        next: response => {\n          this.housedetails = response;\n        }\n      });\n    });\n  }\n  getHouseDetails(houseId) {\n    return this.houseService.getHouseById(houseId);\n  }\n  navigateToApartmentResidents(apartmentId) {\n    console.log(apartmentId);\n  }\n  openEditModal(residentId) {\n    const modalRef = this.modalService.open(HouseEditComponent);\n    modalRef.componentInstance.residentId = residentId;\n  }\n}\n_class = HouseEditComponent;\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Component","Injectable","HouseEditComponent","constructor","modalService","route","router","houseService","isManager","isResident","housedetails","id","number","street","city","country","postcode","ngOnInit","params","subscribe","houseId","getHouseDetails","next","response","getHouseById","navigateToApartmentResidents","apartmentId","console","log","openEditModal","residentId","modalRef","open","componentInstance","factory","ɵfac","providedIn"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\tets\\VmihailovUi\\ClientApp\\src\\app\\house-edit\\house-edit.component.ts"],"sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { Apartment } from '../Models/apartment.model';\nimport { House } from '../Models/house.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Injectable({\n  providedIn: 'root',\n})\n@Component({\n  selector: 'app-house-edit',\n  templateUrl: './house-edit.component.html',\n  styleUrls: ['./house-edit.component.css']\n})\nexport class HouseEditComponent implements OnInit {\n  houseId: number | undefined;\n  isManager: boolean = false;\n  apartmentId: number | undefined;\n  isResident: boolean = false;\n  house: House | undefined;\n  apartments: Apartment[]| undefined;\n  showEditForm: boolean | undefined;\n  housedetails:House={\n    id: 0,\n    number: 0,\n    street: '',\n    city: '',\n    country: '',\n    postcode: '',\n  }\n  constructor(\n    public modalService:NgbModal,\n    private route: ActivatedRoute,\n    private router:Router, \n    private houseService: HomesApiService,\n\n  ) { }\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.houseId = +params['id']; \n      this.getHouseDetails(this.houseId).subscribe({\n        next: (response: House) => {\n          this.housedetails = response;\n        }\n      });\n    });\n  }\n  getHouseDetails(houseId: number) {\n    return this.houseService.getHouseById(houseId);\n  }\n  \n  navigateToApartmentResidents(apartmentId: number) {\n   console.log(apartmentId);\n  }\n\nopenEditModal(residentId: number) {\n  const modalRef = this.modalService.open(HouseEditComponent);\n  modalRef.componentInstance.residentId = residentId;\n}\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAgB,eAAe;;AAgB7D,OAAM,MAAOC,kBAAkB;EAgB7BC,YACSC,YAAqB,EACpBC,KAAqB,EACrBC,MAAa,EACbC,YAA6B;IAH9B,KAAAH,YAAY,GAAZA,YAAY;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IAlBtB,KAAAC,SAAS,GAAY,KAAK;IAE1B,KAAAC,UAAU,GAAY,KAAK;IAI3B,KAAAC,YAAY,GAAO;MACjBC,EAAE,EAAE,CAAC;MACLC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;KACX;EAOG;EACJC,QAAQA,CAAA;IACN,IAAI,CAACZ,KAAK,CAACa,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,OAAO,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;MAC5B,IAAI,CAACG,eAAe,CAAC,IAAI,CAACD,OAAO,CAAC,CAACD,SAAS,CAAC;QAC3CG,IAAI,EAAGC,QAAe,IAAI;UACxB,IAAI,CAACb,YAAY,GAAGa,QAAQ;QAC9B;OACD,CAAC;IACJ,CAAC,CAAC;EACJ;EACAF,eAAeA,CAACD,OAAe;IAC7B,OAAO,IAAI,CAACb,YAAY,CAACiB,YAAY,CAACJ,OAAO,CAAC;EAChD;EAEAK,4BAA4BA,CAACC,WAAmB;IAC/CC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EACzB;EAEFG,aAAaA,CAACC,UAAkB;IAC9B,MAAMC,QAAQ,GAAG,IAAI,CAAC3B,YAAY,CAAC4B,IAAI,CAAC9B,kBAAkB,CAAC;IAC3D6B,QAAQ,CAACE,iBAAiB,CAACH,UAAU,GAAGA,UAAU;EACpD;;SA5Ca5B,kBAAkB;;SAAlBA,MAAkB;EAAAgC,OAAA,EAAlBhC,MAAkB,CAAAiC,IAAA;EAAAC,UAAA,EAPjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}