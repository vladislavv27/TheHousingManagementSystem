{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HouseEditComponent } from '../ModalLogs/house-edit/house-edit.component';\nimport jwtDecode from 'jwt-decode';\nlet AllHousesComponent = class AllHousesComponent {\n  constructor(houseService, modalService, AuthorizeService) {\n    this.houseService = houseService;\n    this.modalService = modalService;\n    this.AuthorizeService = AuthorizeService;\n    this.houses = [];\n    this.isManager = false;\n    this.isResident = false;\n  }\n  ngOnInit() {\n    this.manager();\n    this.getHouses();\n  }\n  getHouses() {\n    this.houseService.getAllHouses().subscribe(houses => {\n      this.houses = houses;\n      console.log(this.houses);\n    });\n  }\n  openEditModalEditHouse(houseId) {\n    const modalRef = this.modalService.open(HouseEditComponent);\n    modalRef.componentInstance.houseId = houseId;\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n};\nAllHousesComponent = __decorate([Component({\n  selector: 'app-all-houses',\n  templateUrl: './all-houses.component.html',\n  styleUrls: ['./all-houses.component.css']\n})], AllHousesComponent);\nexport { AllHousesComponent };","map":{"version":3,"names":["Component","HouseEditComponent","jwtDecode","AllHousesComponent","constructor","houseService","modalService","AuthorizeService","houses","isManager","isResident","ngOnInit","manager","getHouses","getAllHouses","subscribe","console","log","openEditModalEditHouse","houseId","modalRef","open","componentInstance","getAccessToken","userRole","token","role","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\all-houses\\all-houses.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { House } from '../Models/house.model';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { HouseEditComponent } from '../ModalLogs/house-edit/house-edit.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthorizeService } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\n\n@Component({\n  selector: 'app-all-houses',\n  templateUrl: './all-houses.component.html',\n  styleUrls: ['./all-houses.component.css']\n})\nexport class AllHousesComponent {\n  \n\n  houses: House[]=[];\n  isManager: boolean = false;\n  isResident: boolean = false;\n\n    constructor(private houseService: HomesApiService,\n    public modalService:NgbModal,\n    private AuthorizeService: AuthorizeService,\n\n  ) { }\n  ngOnInit(): void {\n    this.manager();\n    this.getHouses();\n  }\n\n  getHouses() {\n    this.houseService.getAllHouses().subscribe(\n      (houses: House[]) => {\n        this.houses = houses;\n        console.log(this.houses); \n      }\n    );\n  }\n  openEditModalEditHouse(houseId: number) {\n    const modalRef = this.modalService.open(HouseEditComponent);\n    modalRef.componentInstance.houseId = houseId;\n  }\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n        \n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAASC,kBAAkB,QAAQ,8CAA8C;AAGjF,OAAOC,SAAS,MAAM,YAAY;AAO3B,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAO3BC,YAAoBC,YAA6B,EAC1CC,YAAqB,EACpBC,gBAAkC;IAFtB,KAAAF,YAAY,GAAZA,YAAY;IACzB,KAAAC,YAAY,GAAZA,YAAY;IACX,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAN1B,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,UAAU,GAAY,KAAK;EAMvB;EACJC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACR,YAAY,CAACS,YAAY,EAAE,CAACC,SAAS,CACvCP,MAAe,IAAI;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpBQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,MAAM,CAAC;IAC1B,CAAC,CACF;EACH;EACAU,sBAAsBA,CAACC,OAAe;IACpC,MAAMC,QAAQ,GAAG,IAAI,CAACd,YAAY,CAACe,IAAI,CAACpB,kBAAkB,CAAC;IAC3DmB,QAAQ,CAACE,iBAAiB,CAACH,OAAO,GAAGA,OAAO;EAC9C;EACAP,OAAOA,CAAA;IACL,IAAI,CAACL,gBAAgB,CAACgB,cAAc,EAAE,CAACR,SAAS,CAAES,QAAuB,IAAI;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,MAAMC,KAAK,GAAQvB,SAAS,CAACsB,QAAQ,CAAC;QACtC,MAAME,IAAI,GAAGD,KAAK,CAACC,IAAI;QAEvB,IAAI,CAACjB,SAAS,GAAGiB,IAAI,KAAK,SAAS;QACnC,IAAI,CAAChB,UAAU,GAAGgB,IAAI,KAAK,UAAU;OACtC,MAAM;QACL,IAAI,CAACjB,SAAS,GAAG,KAAK;QACtB,IAAI,CAACC,UAAU,GAAG,KAAK;;IAE3B,CAAC,CAAC;EACJ;CACD;AA3CYP,kBAAkB,GAAAwB,UAAA,EAL9B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW3B,kBAAkB,CA2C9B;SA3CYA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}