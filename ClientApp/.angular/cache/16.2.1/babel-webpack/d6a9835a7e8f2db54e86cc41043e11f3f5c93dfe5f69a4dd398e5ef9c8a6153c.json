{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/VladislavMihailov/source/repos/vladislavm-ui/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport jwtDecode from 'jwt-decode';\nimport { Subject } from 'rxjs';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nlet AllHousesComponent = class AllHousesComponent {\n  constructor(houseService, modalService, router, AuthorizeService) {\n    this.houseService = houseService;\n    this.modalService = modalService;\n    this.router = router;\n    this.AuthorizeService = AuthorizeService;\n    this.filterValue = '';\n    this.activeModals = [];\n    this.filteredHouses = [];\n    this.filterInput = new Subject();\n    this.houses = [];\n    this.isManager = false;\n    this.isResident = false;\n    this.housedetails = {\n      id: 0,\n      number: 0,\n      street: '',\n      city: '',\n      country: '',\n      postcode: ''\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.checkAutorization();\n    this.filterInput.pipe().subscribe(filterValue => {\n      this.applyFilter(filterValue);\n    });\n  }\n  checkAutorization() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null && !this.isManager) {\n        const token = jwtDecode(userRole);\n        const houseid = token.houseid;\n        this.houseService.getHouseById(houseid).subscribe(house => {\n          this.filteredHouses = [house];\n        });\n      } else {\n        this.getHouses();\n      }\n    });\n  }\n  onFilterInputChange() {\n    this.filterInput.next(this.filterValue);\n  }\n  applyFilter(filterValue) {\n    if (!filterValue.trim()) {\n      this.filteredHouses = this.houses;\n    } else {\n      this.filteredHouses = this.houses.filter(house => house.street.toLowerCase().includes(filterValue.toLowerCase()));\n    }\n  }\n  getHouses() {\n    this.houseService.getAllHouses().subscribe(data => {\n      this.houses = data;\n      this.filteredHouses = data;\n    });\n  }\n  getHousesDetails(housesId) {\n    return this.houseService.getHouseById(housesId);\n  }\n  openEditModal(housesId) {\n    this.housesId = housesId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n    this.getHousesDetails(this.housesId).subscribe({\n      next: response => {\n        this.housedetails = response;\n      }\n    });\n  }\n  //////DELET!!!!!!!!!!!!!!!\n  openEditModalCreate() {\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n  }\n  CreateHouse(houseService) {\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next: createdHouse => {}\n    });\n  }\n  //////DELET!!!!!!!!!!!!!!!\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n  deleteHouse(houseId) {\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next: response => {\n        this.router.navigate(['all-houses']);\n        this.closeModalAndRefresh();\n      }\n    });\n  }\n  Delete(houseId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const result = _this.openConfirmationModal();\n      if (yield result) {\n        _this.deleteHouse(houseId);\n      } else {}\n    })();\n  }\n  openConfirmationModal() {\n    const modalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    return modalRef.result.then(result => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  checkAndUpdateHouse(house) {\n    const houseNumberToCheck = house.number;\n    this.houseService.doesHouseExistByNumber(houseNumberToCheck).subscribe(exists => {\n      if (exists) {\n        this.houseService.UpdateHouse(this.housedetails.id, this.housedetails).subscribe({\n          next: response => {}\n        });\n      } else {\n        this.houseService.CreateHouse(this.housedetails).subscribe({\n          next: createdHouse => {}\n        });\n      }\n      this.closeModalAndRefresh();\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigate(['all-houses']);\n    location.reload();\n  }\n};\n__decorate([ViewChild('editModal')], AllHousesComponent.prototype, \"editModal\", void 0);\n__decorate([ViewChild('CreateModal')], AllHousesComponent.prototype, \"CreateModal\", void 0);\nAllHousesComponent = __decorate([Component({\n  selector: 'app-all-houses',\n  templateUrl: './all-houses.component.html',\n  styleUrls: ['./all-houses.component.css']\n})], AllHousesComponent);\nexport { AllHousesComponent };","map":{"version":3,"names":["Component","ViewChild","jwtDecode","Subject","DeleteConfirmationModalComponent","AllHousesComponent","constructor","houseService","modalService","router","AuthorizeService","filterValue","activeModals","filteredHouses","filterInput","houses","isManager","isResident","housedetails","id","number","street","city","country","postcode","ngOnInit","manager","checkAutorization","pipe","subscribe","applyFilter","getAccessToken","userRole","token","houseid","getHouseById","house","getHouses","onFilterInputChange","next","trim","filter","toLowerCase","includes","getAllHouses","data","getHousesDetails","housesId","openEditModal","modalRef","open","editModal","push","response","openEditModalCreate","CreateModal","CreateHouse","createdHouse","role","deleteHouse","houseId","DeleteHouse","navigate","closeModalAndRefresh","Delete","_this","_asyncToGenerator","result","openConfirmationModal","then","catch","checkAndUpdateHouse","houseNumberToCheck","doesHouseExistByNumber","exists","UpdateHouse","forEach","dismiss","location","reload","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\all-houses\\all-houses.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { House } from '../Models/house.model';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthorizeService } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-all-houses',\n  templateUrl: './all-houses.component.html',\n  styleUrls: ['./all-houses.component.css']\n})\nexport class AllHousesComponent {\n  @ViewChild('editModal') editModal!: ElementRef;\n  @ViewChild('CreateModal') CreateModal!: ElementRef;\n  HouseEdit!: FormGroup;\n  filterValue = '';\n  activeModals: NgbModalRef[] = [];\n  housesId!: number;\n  filteredHouses: House[] = [];\n  filterInput: Subject<string> = new Subject<string>();\n  houses: House[] = [];\n  isManager: boolean = false;\n  isResident: boolean = false;\n  housedetails: House = {\n    id: 0,\n    number: 0,\n    street: '',\n    city: '',\n    country: '',\n    postcode: '',\n  }\n\n  constructor(private houseService: HomesApiService,\n    public modalService: NgbModal,\n    private router: Router,\n    private AuthorizeService: AuthorizeService,\n  ) {\n  }\n  ngOnInit(): void {\n    this.manager();\n    this.checkAutorization();\n    this.filterInput.pipe().subscribe((filterValue) => {\n      this.applyFilter(filterValue);\n    });\n\n  }\n  checkAutorization() {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null && !this.isManager) {\n        const token: any = jwtDecode(userRole);\n        const houseid = token.houseid;\n        this.houseService.getHouseById(houseid).subscribe((house: any) => {\n          this.filteredHouses = [house];\n        });\n      }\n      else {\n        this.getHouses();\n      }\n    });\n  }\n\n onFilterInputChange() {\n  this.filterInput.next(this.filterValue);\n}\n\n\napplyFilter(filterValue: string) {\n  if (!filterValue.trim()) {\n    this.filteredHouses = this.houses;\n  } else {\n    this.filteredHouses = this.houses.filter((house) =>\n      house.street.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n}\n\n\n  getHouses() {\n    this.houseService.getAllHouses().subscribe((data: House[]) => {\n      this.houses = data;\n      this.filteredHouses = data;\n    });\n  }\n  getHousesDetails(housesId: number) {\n    return this.houseService.getHouseById(housesId);\n  }\n\n  openEditModal(housesId: number) {\n    this.housesId = housesId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n\n    this.getHousesDetails(this.housesId).subscribe({\n      next: (response: House) => {\n        this.housedetails = response;\n      }\n    });\n  }\n  //////DELET!!!!!!!!!!!!!!!\n  openEditModalCreate(){\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n   \n  }\n  CreateHouse(houseService:House){\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next: (createdHouse) => {           \n      }\n    });\n  }\n    //////DELET!!!!!!!!!!!!!!!\n\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n  deleteHouse(houseId: number) {\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next: (response) => {\n        this.router.navigate(['all-houses'])\n        this.closeModalAndRefresh();\n      }\n    })\n\n  }\n  async Delete(houseId: number) {\n    const result = this.openConfirmationModal();\n    if (await result) {\n      this.deleteHouse(houseId)\n    } else {\n    }\n  }\n\n  openConfirmationModal(): Promise<boolean> {\n    const modalRef: NgbModalRef = this.modalService.open(DeleteConfirmationModalComponent);\n\n    return modalRef.result.then((result) => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n\n\n  checkAndUpdateHouse(house: House) {\n    const houseNumberToCheck = house.number;\n    this.houseService.doesHouseExistByNumber(houseNumberToCheck).subscribe((exists) => {\n      if (exists) {\n        this.houseService.UpdateHouse(this.housedetails.id, this.housedetails).subscribe({\n          next: (response) => {\n          }\n        });\n      } else {\n        this.houseService.CreateHouse(this.housedetails).subscribe({\n          next: (createdHouse) => {           \n          }\n        });\n      }\n      this.closeModalAndRefresh();\n    });\n    \n  }\n\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigate(['all-houses']);\n    location.reload();\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}