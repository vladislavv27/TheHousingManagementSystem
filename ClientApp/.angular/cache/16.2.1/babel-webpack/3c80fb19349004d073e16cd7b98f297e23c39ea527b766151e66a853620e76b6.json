{"ast":null,"code":"var _class;\nimport { ApartmentEditComponent } from '../ModalLogs/apartment-edit/apartment-edit.component';\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../Services/homes-api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/api-authorization/authorize.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = [\"editModal\"];\nfunction ApartmentComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.openEditModal(ctx_r4.apartmentdetails.id));\n    });\n    i0.ɵɵtext(1, \"Add Resident\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\")(21, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_tr_33_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.openEditModal());\n    });\n    i0.ɵɵtext(22, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const resident_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r6.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r6.surname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r6.personalCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 10, resident_r6.dateOfBirth));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(resident_r6.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r6.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r6.isOwner ? \"Yes\" : \"No\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r6.apartmentId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.isManager || resident_r6.email === ctx_r1.currentUser));\n  }\n}\nfunction ApartmentComponent_ng_template_34_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const resident_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", resident_r11.apartmentId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(resident_r11.apartmentId);\n  }\n}\nfunction ApartmentComponent_ng_template_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"Resident Detai11s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"form\", null, 8)(6, \"div\", 9)(7, \"label\", 10);\n    i0.ɵɵtext(8, \"Id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.residentdetails.id = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 10);\n    i0.ɵɵtext(12, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.residentdetails.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"label\", 13);\n    i0.ɵɵtext(16, \"Surname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.residentdetails.surname = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 9)(19, \"label\", 15);\n    i0.ɵɵtext(20, \"Personal Code:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.residentdetails.personalCode = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 9)(23, \"label\", 17);\n    i0.ɵɵtext(24, \"Date of Birth:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.residentdetails.dateOfBirth = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 9)(27, \"label\", 19);\n    i0.ɵɵtext(28, \"Phone:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.residentdetails.phone = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 9)(31, \"label\", 21);\n    i0.ɵɵtext(32, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_33_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.residentdetails.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 23)(35, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_35_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.residentdetails.isOwner = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"label\", 25);\n    i0.ɵɵtext(37, \"Is Owner\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 23)(39, \"label\", 26);\n    i0.ɵɵtext(40, \"apartmentId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"select\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_select_ngModelChange_41_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.residentdetails.apartmentId = $event);\n    });\n    i0.ɵɵtemplate(42, ApartmentComponent_ng_template_34_option_42_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_34_Template_input_ngModelChange_43_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.residentdetails.apartmentId = $event);\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.surname);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.personalCode);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.dateOfBirth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.phone);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.isOwner);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.apartmentId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.residents);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.residentdetails.apartmentId);\n  }\n}\nexport class ApartmentComponent {\n  constructor(modalService, houseService, route, router, AuthorizeService) {\n    this.modalService = modalService;\n    this.houseService = houseService;\n    this.route = route;\n    this.router = router;\n    this.AuthorizeService = AuthorizeService;\n    this.isManager = false;\n    this.isResident = false;\n    this.residents = [];\n    this.apartmentdetails = {\n      id: 0,\n      number: 0,\n      floor: 0,\n      numberOfRooms: 0,\n      population: 0,\n      fullArea: 0,\n      livingSpace: 0,\n      houseId: 0\n    };\n    this.residentdetails = {\n      id: 0,\n      name: '',\n      surname: '',\n      personalCode: '',\n      dateOfBirth: new Date(2000, 0, 1),\n      phone: '',\n      email: '',\n      isOwner: false,\n      apartmentId: 0\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.route.params.subscribe(params => {\n      this.apartmentId = +params['id'];\n      this.getApartmentDetails(this.apartmentId).subscribe({\n        next: response => {\n          this.apartmentdetails = response;\n        }\n      });\n      this.getApartmentsResidents(this.apartmentId);\n    });\n    this.AuthorizeService.getUser().subscribe(data => {\n      if (data && data.name) {\n        this.currentUser = data.name;\n      }\n    });\n  }\n  getApartmentDetails(apartmentId) {\n    return this.houseService.GetApartmentById(apartmentId);\n  }\n  getApartmentsResidents(Apartmentid) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(residents => {\n      this.residents = residents;\n    });\n  }\n  //openEditModal(residentId: number) {\n  //const modalRef = this.modalService.open(ResdidentDetailComponent);\n  //modalRef.componentInstance.residentId = residentId;\n  // }\n  openEditModal() {\n    this.editModal.nativeElement.classList.add('show'); // Show the modal\n  }\n\n  openEditModalEditApartment(apartmentId) {\n    const modalRef = this.modalService.open(ApartmentEditComponent);\n    modalRef.componentInstance.apartmentId = apartmentId;\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n}\n_class = ApartmentComponent;\n_class.ɵfac = function ApartmentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.HomesApiService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthorizeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-apartment\"]],\n  viewQuery: function ApartmentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editModal = _t.first);\n    }\n  },\n  decls: 36,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"\"], [\"class\", \"btn btn-warning\", 3, \"click\", 4, \"ngIf\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"editModal\", \"\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"form\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"name\", \"id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"surname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"surname\", \"name\", \"surname\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"personalCode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"personalCode\", \"name\", \"personalCode\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone\", \"name\", \"phone\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isOwner\", \"name\", \"isOwner\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"isOwner\", 1, \"form-check-label\"], [\"for\", \"apartmentId\", 1, \"form-label\"], [\"name\", \"residentdetails.apartmentId\", \"size\", \"1\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"id\", \"apartmentId\", \"name\", \"apartmentId\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"]],\n  template: function ApartmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtemplate(4, ApartmentComponent_button_4_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 0);\n      i0.ɵɵelement(6, \"table\", 3);\n      i0.ɵɵelementStart(7, \"h2\");\n      i0.ɵɵtext(8, \"Residents\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"table\", 3)(10, \"thead\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Personal Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Is Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"Apartment ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\");\n      i0.ɵɵtext(31, \"Edit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"tbody\");\n      i0.ɵɵtemplate(33, ApartmentComponent_tr_33_Template, 23, 12, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(34, ApartmentComponent_ng_template_34_Template, 44, 11, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Apartment:\", ctx.apartmentdetails.number, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.residents !== null && ctx.residents !== undefined && ctx.residents.length > 0));\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngForOf\", ctx.residents);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.CheckboxControlValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i5.DatePipe],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBhcnRtZW50L2FwYXJ0bWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIioge1xuICAgIG1hcmdpbjogMTBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["ApartmentEditComponent","jwtDecode","i0","ɵɵelementStart","ɵɵlistener","ApartmentComponent_button_4_Template_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","openEditModal","apartmentdetails","id","ɵɵtext","ɵɵelementEnd","ApartmentComponent_tr_33_Template_button_click_21_listener","_r8","ctx_r7","ɵɵadvance","ɵɵtextInterpolate","resident_r6","name","surname","personalCode","ɵɵpipeBind1","dateOfBirth","phone","email","isOwner","apartmentId","ɵɵproperty","ctx_r1","isManager","currentUser","resident_r11","ApartmentComponent_ng_template_34_Template_input_ngModelChange_9_listener","$event","_r13","ctx_r12","residentdetails","ApartmentComponent_ng_template_34_Template_input_ngModelChange_13_listener","ctx_r14","ApartmentComponent_ng_template_34_Template_input_ngModelChange_17_listener","ctx_r15","ApartmentComponent_ng_template_34_Template_input_ngModelChange_21_listener","ctx_r16","ApartmentComponent_ng_template_34_Template_input_ngModelChange_25_listener","ctx_r17","ApartmentComponent_ng_template_34_Template_input_ngModelChange_29_listener","ctx_r18","ApartmentComponent_ng_template_34_Template_input_ngModelChange_33_listener","ctx_r19","ApartmentComponent_ng_template_34_Template_input_ngModelChange_35_listener","ctx_r20","ApartmentComponent_ng_template_34_Template_select_ngModelChange_41_listener","ctx_r21","ɵɵtemplate","ApartmentComponent_ng_template_34_option_42_Template","ApartmentComponent_ng_template_34_Template_input_ngModelChange_43_listener","ctx_r22","ctx_r3","residents","ApartmentComponent","constructor","modalService","houseService","route","router","AuthorizeService","isResident","number","floor","numberOfRooms","population","fullArea","livingSpace","houseId","Date","ngOnInit","manager","params","subscribe","getApartmentDetails","next","response","getApartmentsResidents","getUser","data","GetApartmentById","Apartmentid","GetApartmentsResident","editModal","nativeElement","classList","add","openEditModalEditApartment","modalRef","open","componentInstance","getAccessToken","userRole","token","role","ɵɵdirectiveInject","i1","NgbModal","i2","HomesApiService","i3","ActivatedRoute","Router","i4","selectors","viewQuery","ApartmentComponent_Query","rf","ctx","ApartmentComponent_button_4_Template","ɵɵelement","ApartmentComponent_tr_33_Template","ApartmentComponent_ng_template_34_Template","ɵɵtemplateRefExtractor","ɵɵtextInterpolate1","undefined","length"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.html"],"sourcesContent":["\nimport { Apartment } from './../Models/apartment.model';\nimport { Resident } from './../Models/resident.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { ResdidentDetailComponent } from '../ModalLogs/resdident-detail/resdident-detail.component';\nimport { ApartmentEditComponent } from '../ModalLogs/apartment-edit/apartment-edit.component';\nimport { AuthorizeService, IUser } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\n\n\n@Component({\n  selector: 'app-apartment',\n  templateUrl: './apartment.component.html',\n  styleUrls: ['./apartment.component.css']\n})\n\n\n\n\nexport class ApartmentComponent implements OnInit {\n  @ViewChild('editModal') editModal!: ElementRef;\n  apartmentId!: number;\n  isManager: boolean = false;\n  isResident: boolean = false;\n  apartments!: Apartment ;\n  showEditForm!: boolean;\n  residents: Resident[] = [];\n  selectedResident!: Resident;\n  showEditModal!: boolean;\n  apartmentForm!: FormGroup;\n  currentUser: any;\n  apartmentdetails: Apartment = {\n    id: 0,\n    number: 0,\n    floor: 0,\n    numberOfRooms: 0,\n    population: 0,\n    fullArea: 0,\n    livingSpace: 0,\n    houseId: 0\n  }\n  residentdetails: Resident = {\n    id: 0,\n    name: '',\n    surname: '',\n    personalCode: '',\n    dateOfBirth: new Date(2000, 0, 1),\n    phone: '',\n    email: '',\n    isOwner: false,\n    apartmentId: 0\n  }\n  constructor(\n    public modalService: NgbModal,\n    private houseService: HomesApiService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private AuthorizeService: AuthorizeService,\n  ) { }\n\n  ngOnInit() {\n    this.manager();\n    this.route.params.subscribe(params => {\n      this.apartmentId = +params['id'];\n      this.getApartmentDetails(this.apartmentId).subscribe({\n        next: (response: Apartment) => {\n          this.apartmentdetails = response;\n        }\n      });\n      this.getApartmentsResidents(this.apartmentId);\n\n    });\n    this.AuthorizeService.getUser().subscribe(data => {\n      if (data && data.name) {\n        this.currentUser = data.name;\n      }\n    });\n\n  }\n\n  getApartmentDetails(apartmentId: number) {\n    return this.houseService.GetApartmentById(apartmentId);\n  }\n\n\n  getApartmentsResidents(Apartmentid: number) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(\n      (residents: Resident[]) => {\n        this.residents = residents;\n      },\n\n    );\n  }\n\n  //openEditModal(residentId: number) {\n    //const modalRef = this.modalService.open(ResdidentDetailComponent);\n    //modalRef.componentInstance.residentId = residentId;\n // }\n  openEditModal() {\n    this.editModal.nativeElement.classList.add('show'); // Show the modal\n  }\n  openEditModalEditApartment(apartmentId: number) {\n    const modalRef = this.modalService.open(ApartmentEditComponent);\n    modalRef.componentInstance.apartmentId = apartmentId;\n  }\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n}\n","<div class=\"container\">\n  <h2>Apartment:{{apartmentdetails.number}}</h2>\n  <div class=\"\">\n    <button class=\"btn btn-warning\" *ngIf=\"!(residents !== null && residents !== undefined && residents.length > 0)\"\n      (click)=\"(openEditModal(apartmentdetails.id))\">Add Resident</button>\n  </div>\n\n\n</div>\n<div class=\"container\">\n  <table class=\"table\">\n  </table>\n  <h2>Residents</h2>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Surname</th>\n        <th>Personal Code</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Email</th>\n        <th>Is Owner</th>\n        <th>Apartment ID</th>\n        <th>Edit</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let resident of residents\">\n        <td>{{ resident.id }}</td>\n        <td>{{ resident.name }}</td>\n        <td>{{ resident.surname }}</td>\n        <td>{{ resident.personalCode }}</td>\n        <td>{{ resident.dateOfBirth | date }}</td>\n        <td>{{ resident.phone }}</td>\n        <td>{{ resident.email }}</td>\n        <td>{{ resident.isOwner ? 'Yes' : 'No' }}</td>\n        <td>{{ resident.apartmentId }}</td>\n        <td>\n          <button class=\"btn btn-success\" [disabled]=\"!(isManager || resident.email === currentUser)\"\n            (click)=\"openEditModal()\">Edit</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<ng-template #editModal>\n\n  <div class=\"container\">\n    <h2>Resident Detai11s</h2>\n    <div>\n      <form #form=\"ngForm\">\n        <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Id:</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" [(ngModel)]=\"residentdetails.id\" required>\n          </div>\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Name:</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" [(ngModel)]=\"residentdetails.name\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"surname\" class=\"form-label\">Surname:</label>\n          <input type=\"text\" class=\"form-control\" id=\"surname\" name=\"surname\" [(ngModel)]=\"residentdetails.surname\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"personalCode\" class=\"form-label\">Personal Code:</label>\n          <input type=\"text\" class=\"form-control\" id=\"personalCode\" name=\"personalCode\" [(ngModel)]=\"residentdetails.personalCode\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date of Birth:</label>\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" [(ngModel)]=\"residentdetails.dateOfBirth\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"phone\" class=\"form-label\">Phone:</label>\n          <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" [(ngModel)]=\"residentdetails.phone\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"residentdetails.email\" required>\n        </div>\n        <div class=\"mb-3 form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"isOwner\" name=\"isOwner\" [(ngModel)]=\"residentdetails.isOwner\">\n          <label class=\"form-check-label\" for=\"isOwner\">Is Owner</label>\n        </div>\n        <div class=\"mb-3 form-check\">\n            <label for=\"apartmentId\" class=\"form-label\">apartmentId</label>\n            <select name=\"residentdetails.apartmentId\" class=\"form-select\" size=\"1\" [(ngModel)]=\"residentdetails.apartmentId\">\n              <option *ngFor=\"let resident of residents\" [value]=\"resident.apartmentId\">{{ resident.apartmentId }}</option>\n            </select>\n                      \n          </div>\n          <input type=\"number\" class=\"form-control form-control-sm\" id=\"apartmentId\" name=\"apartmentId\" [(ngModel)]=\"residentdetails.apartmentId\">\n\n        \n      </form>\n    </div>\n  </div>\n</ng-template>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}