{"ast":null,"code":"var _class;\nimport jwtDecode from 'jwt-decode';\nimport { HouseEditComponent } from '../house-edit/house-edit.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"..//Services/homes-api.service\";\nimport * as i4 from \"src/api-authorization/authorize.service\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/apartments\", a1, \"residents\"];\n};\nfunction HouseDetailComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"a\", 3);\n    i0.ɵɵtext(17, \"View\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const apartment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r1.number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r1.floor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r1.numberOfRooms);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r1.population);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r1.fullArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r1.livingSpace);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, apartment_r1.id));\n  }\n}\nexport class HouseDetailComponent {\n  constructor(modalService, route, router, houseService, AuthorizeService) {\n    this.modalService = modalService;\n    this.route = route;\n    this.router = router;\n    this.houseService = houseService;\n    this.AuthorizeService = AuthorizeService;\n    this.isManager = false;\n    this.isResident = false;\n    this.housedetails = {\n      id: 0,\n      number: 0,\n      street: '',\n      city: '',\n      country: '',\n      postcode: ''\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.route.params.subscribe(params => {\n      this.houseId = +params['id'];\n      this.getHouseDetails(this.houseId).subscribe({\n        next: response => {\n          this.housedetails = response;\n        }\n      });\n      this.getApartmentsByHouseId(this.houseId);\n    });\n  }\n  navigateToApartmentResidents(apartmentId) {\n    console.log(apartmentId);\n  }\n  getHouseDetails(houseId) {\n    return this.houseService.getHouseById(houseId);\n  }\n  openEditModal(houseId) {\n    const modalRef = this.modalService.open(HouseEditComponent);\n    modalRef.componentInstance.houseId = houseId;\n  }\n  getApartmentsByHouseId(houseId) {\n    this.houseService.GetHouseApartments(houseId).subscribe(apartments => {\n      this.apartments = apartments;\n    }, error => {\n      console.error('Error fetching apartments:', error);\n    });\n  }\n  updateHouse() {\n    this.houseService.UpdateHouse(this.housedetails.id, this.housedetails).subscribe({\n      next: response => {\n        this.router.navigate(['all-houses']);\n      }\n    });\n  }\n  deleteHouse(houseId) {\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next: response => {\n        this.router.navigate(['all-houses']);\n      }\n    });\n  }\n  addHouse(house) {\n    console.log(house);\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next: house => {\n        console.log(house);\n        this.router.navigate(['all-houses']);\n      }\n    });\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n}\n_class = HouseDetailComponent;\n_class.ɵfac = function HouseDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HomesApiService), i0.ɵɵdirectiveInject(i4.AuthorizeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-house-detail\"]],\n  decls: 28,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"routerLink\"]],\n  template: function HouseDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"h2\");\n      i0.ɵɵtext(6, \"All Apartments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 1)(8, \"thead\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Floor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Number of Rooms\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Population\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Full Area\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Living Space\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"tbody\");\n      i0.ɵɵtemplate(27, HouseDetailComponent_tr_27_Template, 18, 10, \"tr\", 2);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"House number \", ctx.housedetails.number, \"\");\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngForOf\", ctx.apartments);\n    }\n  },\n  dependencies: [i5.NgForOf, i2.RouterLink],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG91c2UtZGV0YWlsL2hvdXNlLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIioge1xuICAgIG1hcmdpbjogMTBweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["jwtDecode","HouseEditComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","apartment_r1","id","number","floor","numberOfRooms","population","fullArea","livingSpace","ɵɵproperty","ɵɵpureFunction1","_c0","HouseDetailComponent","constructor","modalService","route","router","houseService","AuthorizeService","isManager","isResident","housedetails","street","city","country","postcode","ngOnInit","manager","params","subscribe","houseId","getHouseDetails","next","response","getApartmentsByHouseId","navigateToApartmentResidents","apartmentId","console","log","getHouseById","openEditModal","modalRef","open","componentInstance","GetHouseApartments","apartments","error","updateHouse","UpdateHouse","navigate","deleteHouse","DeleteHouse","addHouse","house","CreateHouse","getAccessToken","userRole","token","role","ɵɵdirectiveInject","i1","NgbModal","i2","ActivatedRoute","Router","i3","HomesApiService","i4","selectors","decls","vars","consts","template","HouseDetailComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","HouseDetailComponent_tr_27_Template","ɵɵtextInterpolate1","factory","ɵfac","providedIn"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\tets\\VmihailovUi\\ClientApp\\src\\app\\house-detail\\house-detail.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\tets\\VmihailovUi\\ClientApp\\src\\app\\house-detail\\house-detail.component.html"],"sourcesContent":["import { House } from './../Models/house.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { HomesApiService } from '..//Services/homes-api.service'; \nimport { Apartment } from '../Models/apartment.model'; \nimport { Injectable } from '@angular/core';\nimport { AuthorizeService } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\nimport { HouseEditComponent } from '../house-edit/house-edit.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n@Injectable({\n  providedIn: 'root',\n})\n@Component({\n  selector: 'app-house-detail',\n  templateUrl: './house-detail.component.html',\n  styleUrls: ['./house-detail.component.css']\n})\nexport class HouseDetailComponent implements OnInit {\n  houseId: number | undefined;\n  isManager: boolean = false;\n  apartmentId: number | undefined;\n  isResident: boolean = false;\n  house: House | undefined;\n  apartments: Apartment[]| undefined;\n  showEditForm: boolean | undefined;\n  housedetails:House={\n    id: 0,\n    number: 0,\n    street: '',\n    city: '',\n    country: '',\n    postcode: '',\n  }\n  \n  constructor(\n    public modalService:NgbModal,\n    private route: ActivatedRoute,\n    private router:Router, \n    private houseService: HomesApiService,\n    private AuthorizeService: AuthorizeService,\n\n  ) { }\n  ngOnInit(): void {\n    this.manager();\n    this.route.params.subscribe(params => {\n      this.houseId = +params['id']; \n      this.getHouseDetails(this.houseId).subscribe({\n        next: (response: House) => {\n          this.housedetails = response;\n        }\n      });\n      this.getApartmentsByHouseId(this.houseId);\n    });\n  }\n  navigateToApartmentResidents(apartmentId: number) {\n   console.log(apartmentId);\n  }\n  \n  \n  getHouseDetails(houseId: number) {\n    return this.houseService.getHouseById(houseId);\n  }\n  \n  openEditModal(houseId: number) {\n    const modalRef = this.modalService.open(HouseEditComponent);\n    modalRef.componentInstance.houseId = houseId;\n  }\n  \n  getApartmentsByHouseId(houseId: number) {\n    this.houseService.GetHouseApartments(houseId).subscribe(\n      (apartments: Apartment[]) => {\n        this.apartments = apartments;\n      },\n      (error) => {\n        console.error('Error fetching apartments:', error);\n      }\n    );\n  }\n  updateHouse(){\n    this.houseService.UpdateHouse(this.housedetails.id,this.housedetails).subscribe({\n      next:(response)=>{\n        this.router.navigate(['all-houses'])\n      }\n    })\n  }\n  deleteHouse(houseId: number){\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next:(response)=>{\n        this.router.navigate(['all-houses'])\n      }\n    })\n  }\n  addHouse(house:House){\n    console.log(house);\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next:(house)=>{\n        console.log(house);\n        this.router.navigate(['all-houses'])\n      }\n    })\n  }\n  \n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n        \n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n  <h2>House number {{ housedetails.number }}</h2>\n<br>\n\n\n</div>\n\n\n\n<div class=\"container\">\n    <h2>All Apartments</h2>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Number</th>\n          <th>Floor</th>\n          <th>Number of Rooms</th>\n          <th>Population</th>\n          <th>Full Area</th>\n          <th>Living Space</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let apartment of apartments\">\n          <td>{{ apartment.id }}</td>\n          <td>{{ apartment.number }}</td>\n          <td>{{ apartment.floor }}</td>\n          <td>{{ apartment.numberOfRooms }}</td>\n          <td>{{ apartment.population }}</td>\n          <td>{{ apartment.fullArea }}</td>\n          <td>{{ apartment.livingSpace }}</td>\n          <!-- Use [routerLink] to navigate to residents of the specific apartment -->\n          <td><a class=\"btn btn-success\" [routerLink]=\"['/apartments', apartment.id, 'residents']\">View</a></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}