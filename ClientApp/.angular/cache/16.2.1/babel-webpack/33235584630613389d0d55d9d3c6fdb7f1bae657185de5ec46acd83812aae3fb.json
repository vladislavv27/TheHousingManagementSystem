{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/VladislavMihailov/source/repos/vladislavm-ui/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport jwtDecode from 'jwt-decode';\nimport { Subject } from 'rxjs';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/homes-api.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/api-authorization/authorize.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"editModal\"];\nconst _c1 = [\"CreateModal\"];\nconst _c2 = function (a1) {\n  return [\"/house\", a1];\n};\nfunction AllHousesComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"a\", 10);\n    i0.ɵɵtext(13, \"View\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AllHousesComponent_tr_25_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const house_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.openEditModal(house_r5.id));\n    });\n    i0.ɵɵtext(16, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const house_r5 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(house_r5.number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(house_r5.street);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(house_r5.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(house_r5.country);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(house_r5.postcode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c2, house_r5.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isManager);\n  }\n}\nfunction AllHousesComponent_ng_template_29_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Id is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_29_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_29_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"City is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_29_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Country is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_29_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Postcode is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_29_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Street is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_29_button_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function AllHousesComponent_ng_template_29_button_38_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.Delete());\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"House\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12)(4, \"form\", 13);\n    i0.ɵɵlistener(\"ngSubmit\", function AllHousesComponent_ng_template_29_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onFormSubmitEdit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 14)(6, \"div\", 15)(7, \"label\", 16);\n    i0.ɵɵtext(8, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 17);\n    i0.ɵɵtemplate(10, AllHousesComponent_ng_template_29_div_10_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 15)(12, \"label\", 19);\n    i0.ɵɵtext(13, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 20);\n    i0.ɵɵtemplate(15, AllHousesComponent_ng_template_29_div_15_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 15)(17, \"label\", 21);\n    i0.ɵɵtext(18, \"City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 22);\n    i0.ɵɵtemplate(20, AllHousesComponent_ng_template_29_div_20_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 15)(22, \"label\", 23);\n    i0.ɵɵtext(23, \"Country\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 24);\n    i0.ɵɵtemplate(25, AllHousesComponent_ng_template_29_div_25_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 15)(27, \"label\", 25);\n    i0.ɵɵtext(28, \"Postcode\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"input\", 26);\n    i0.ɵɵtemplate(30, AllHousesComponent_ng_template_29_div_30_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 27)(32, \"label\", 28);\n    i0.ɵɵtext(33, \"Street\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"input\", 29);\n    i0.ɵɵtemplate(35, AllHousesComponent_ng_template_29_div_35_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"button\", 30);\n    i0.ɵɵtext(37, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(38, AllHousesComponent_ng_template_29_button_38_Template, 2, 0, \"button\", 31);\n    i0.ɵɵelementStart(39, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function AllHousesComponent_ng_template_29_Template_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.closeModalAndRefresh());\n    });\n    i0.ɵɵtext(40, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.HouseEdit);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.HouseEdit.get(\"id\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r2.HouseEdit.get(\"id\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.HouseEdit.get(\"number\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r2.HouseEdit.get(\"number\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r2.HouseEdit.get(\"city\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r2.HouseEdit.get(\"city\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r2.HouseEdit.get(\"country\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r2.HouseEdit.get(\"country\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r2.HouseEdit.get(\"postcode\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx_r2.HouseEdit.get(\"postcode\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r2.HouseEdit.get(\"street\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx_r2.HouseEdit.get(\"street\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isManager);\n  }\n}\nfunction AllHousesComponent_ng_template_31_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Id is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_31_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_31_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"City is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_31_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Country is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_31_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Postcode is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_31_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Street is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllHousesComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"House\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12)(4, \"form\", 13);\n    i0.ɵɵlistener(\"ngSubmit\", function AllHousesComponent_ng_template_31_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onFormSubmitCreate());\n    });\n    i0.ɵɵelementStart(5, \"div\", 14)(6, \"div\", 15)(7, \"label\", 16);\n    i0.ɵɵtext(8, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 17);\n    i0.ɵɵtemplate(10, AllHousesComponent_ng_template_31_div_10_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 15)(12, \"label\", 19);\n    i0.ɵɵtext(13, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 20);\n    i0.ɵɵtemplate(15, AllHousesComponent_ng_template_31_div_15_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 15)(17, \"label\", 21);\n    i0.ɵɵtext(18, \"City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 22);\n    i0.ɵɵtemplate(20, AllHousesComponent_ng_template_31_div_20_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 15)(22, \"label\", 23);\n    i0.ɵɵtext(23, \"Country\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 24);\n    i0.ɵɵtemplate(25, AllHousesComponent_ng_template_31_div_25_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 15)(27, \"label\", 25);\n    i0.ɵɵtext(28, \"Postcode\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"input\", 26);\n    i0.ɵɵtemplate(30, AllHousesComponent_ng_template_31_div_30_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 27)(32, \"label\", 28);\n    i0.ɵɵtext(33, \"Street\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"input\", 29);\n    i0.ɵɵtemplate(35, AllHousesComponent_ng_template_31_div_35_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"button\", 30);\n    i0.ɵɵtext(37, \"Add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function AllHousesComponent_ng_template_31_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.closeModalAndRefresh());\n    });\n    i0.ɵɵtext(39, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.HouseCreate);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.HouseCreate.get(\"id\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r4.HouseCreate.get(\"id\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r4.HouseCreate.get(\"number\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r4.HouseCreate.get(\"number\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r4.HouseCreate.get(\"city\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r4.HouseCreate.get(\"city\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r4.HouseCreate.get(\"country\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r4.HouseCreate.get(\"country\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r4.HouseCreate.get(\"postcode\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx_r4.HouseCreate.get(\"postcode\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r4.HouseCreate.get(\"street\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx_r4.HouseCreate.get(\"street\")) == null ? null : tmp_6_0.touched));\n  }\n}\nexport class AllHousesComponent {\n  constructor(houseService, modalService, router, AuthorizeService, formBuilder // Inject FormBuilder for Reactive Forms\n  ) {\n    this.houseService = houseService;\n    this.modalService = modalService;\n    this.router = router;\n    this.AuthorizeService = AuthorizeService;\n    this.formBuilder = formBuilder;\n    this.filterValue = '';\n    this.activeModals = [];\n    this.filteredHouses = [];\n    this.filterInput = new Subject();\n    this.houses = [];\n    this.isManager = false;\n    this.isResident = false;\n    this.housedetails = {\n      id: 0,\n      number: 0,\n      street: '',\n      city: '',\n      country: '',\n      postcode: ''\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.initializeFormEdit();\n    this.initializeFormCreate();\n    this.checkAutorization();\n    this.filterInput.pipe().subscribe(filterValue => {\n      this.applyFilter(filterValue);\n    });\n  }\n  initializeFormEdit() {\n    this.HouseEdit = this.formBuilder.group({\n      id: [null, Validators.required],\n      number: [null, Validators.required],\n      city: [null, Validators.required],\n      country: [null, Validators.required],\n      postcode: [null, Validators.required],\n      street: [null, Validators.required]\n    });\n  }\n  initializeFormCreate() {\n    this.HouseCreate = this.formBuilder.group({\n      id: [null, Validators.required],\n      number: [null, Validators.required],\n      city: [null, Validators.required],\n      country: [null, Validators.required],\n      postcode: [null, Validators.required],\n      street: [null, Validators.required]\n    });\n  }\n  openEditModal(housesId) {\n    this.housesId = housesId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n    this.getHousesDetails(this.housesId).subscribe({\n      next: response => {\n        this.housedetails = response;\n        // Update the form with fetched data\n        this.HouseEdit.setValue({\n          id: response.id,\n          number: response.number,\n          city: response.city,\n          country: response.country,\n          postcode: response.postcode,\n          street: response.street\n        });\n      }\n    });\n  }\n  onFormSubmitEdit() {\n    if (this.HouseEdit.valid) {\n      const formData = this.HouseEdit.value;\n      const houseId = formData.id;\n      this.houseService.UpdateHouse(houseId, formData).subscribe(response => {});\n      this.closeModalAndRefresh();\n    }\n  }\n  Delete() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const houseId = _this.HouseEdit.get('id')?.value;\n      const result = _this.openConfirmationModal();\n      if (yield result) {\n        _this.deleteHouse(houseId);\n      } else {}\n    })();\n  }\n  deleteHouse(houseId) {\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next: response => {\n        this.router.navigate(['all-houses']);\n        this.closeModalAndRefresh();\n      }\n    });\n  }\n  openConfirmationModal() {\n    const modalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    return modalRef.result.then(result => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  ///\n  checkAutorization() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null && !this.isManager) {\n        const token = jwtDecode(userRole);\n        const houseid = token.houseid;\n        this.houseService.getHouseById(houseid).subscribe(house => {\n          this.filteredHouses = [house];\n        });\n      } else {\n        this.getHouses();\n      }\n    });\n  }\n  onFilterInputChange() {\n    this.filterInput.next(this.filterValue);\n  }\n  applyFilter(filterValue) {\n    if (!filterValue.trim()) {\n      this.filteredHouses = this.houses;\n    } else {\n      this.filteredHouses = this.houses.filter(house => house.street.toLowerCase().includes(filterValue.toLowerCase()));\n    }\n  }\n  getHouses() {\n    this.houseService.getAllHouses().subscribe(data => {\n      this.houses = data;\n      this.filteredHouses = data;\n    });\n  }\n  getHousesDetails(housesId) {\n    return this.houseService.getHouseById(housesId);\n  }\n  // openEditModal(housesId: number) {\n  //   this.housesId = housesId;\n  //   const modalRef = this.modalService.open(this.editModal);\n  //   this.activeModals.push(modalRef);\n  //   this.getHousesDetails(this.housesId).subscribe({\n  //     next: (response: House) => {\n  //       this.housedetails = response;\n  //     }\n  //   });\n  // }\n  //////DELET!!!!!!!!!!!!!!!\n  openCreateModal() {\n    this.housedetails = {};\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n  }\n  CreateHouse(houseService) {\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next: createdHouse => {}\n    });\n    this.closeModalAndRefresh();\n  }\n  //////DELET!!!!!!!!!!!!!!!\n  UpdateHouse(house) {\n    this.houseService.UpdateHouse(this.housedetails.id, this.housedetails).subscribe({\n      next: response => {}\n    });\n    this.closeModalAndRefresh();\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigate(['all-houses']);\n    location.reload();\n  }\n}\n_class = AllHousesComponent;\n_class.ɵfac = function AllHousesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HomesApiService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthorizeService), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-all-houses\"]],\n  viewQuery: function AllHousesComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editModal = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.CreateModal = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.TestModal = _t.first);\n    }\n  },\n  decls: 33,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"citySearch\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row-sm-3\"], [1, \"btn\", \"btn-warning\", \"col-sm-12\", 3, \"disabled\", \"click\"], [\"editModal\", \"\"], [\"CreateModal\", \"\"], [1, \"btn\", \"btn-info\", 3, \"routerLink\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [1, \"col-sm-3\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"id\", \"formControlName\", \"id\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"class\", \"text-danger small\", 4, \"ngIf\"], [\"for\", \"number\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"number\", \"formControlName\", \"number\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"country\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"country\", \"formControlName\", \"country\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"postcode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"postcode\", \"formControlName\", \"postcode\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [1, \"col-sm-6\"], [\"for\", \"street\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"street\", \"formControlName\", \"street\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [\"type\", \"button\", \"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"text-danger\", \"small\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function AllHousesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"All Houses\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Search by Street:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AllHousesComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.filterValue = $event;\n      })(\"input\", function AllHousesComponent_Template_input_input_6_listener() {\n        return ctx.onFilterInputChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 4)(8, \"thead\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Street\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Postcode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"View\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Edit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"tbody\");\n      i0.ɵɵtemplate(25, AllHousesComponent_tr_25_Template, 17, 9, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 6)(27, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AllHousesComponent_Template_button_click_27_listener() {\n        return ctx.openCreateModal();\n      });\n      i0.ɵɵtext(28, \"Add House\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(29, AllHousesComponent_ng_template_29_Template, 41, 8, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(31, AllHousesComponent_ng_template_31_Template, 40, 7, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.filterValue);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredHouses);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.isManager);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i3.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWxsLWhvdXNlcy9hbGwtaG91c2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["jwtDecode","Subject","DeleteConfirmationModalComponent","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AllHousesComponent_tr_25_Template_button_click_15_listener","restoredCtx","ɵɵrestoreView","_r7","house_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","openEditModal","id","ɵɵadvance","ɵɵtextInterpolate","number","street","city","country","postcode","ɵɵproperty","ɵɵpureFunction1","_c2","ctx_r0","isManager","AllHousesComponent_ng_template_29_button_38_Template_button_click_0_listener","_r16","ctx_r15","Delete","AllHousesComponent_ng_template_29_Template_form_ngSubmit_4_listener","_r18","ctx_r17","onFormSubmitEdit","ɵɵelement","ɵɵtemplate","AllHousesComponent_ng_template_29_div_10_Template","AllHousesComponent_ng_template_29_div_15_Template","AllHousesComponent_ng_template_29_div_20_Template","AllHousesComponent_ng_template_29_div_25_Template","AllHousesComponent_ng_template_29_div_30_Template","AllHousesComponent_ng_template_29_div_35_Template","AllHousesComponent_ng_template_29_button_38_Template","AllHousesComponent_ng_template_29_Template_button_click_39_listener","ctx_r19","closeModalAndRefresh","ctx_r2","HouseEdit","tmp_1_0","get","hasError","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","AllHousesComponent_ng_template_31_Template_form_ngSubmit_4_listener","_r27","ctx_r26","onFormSubmitCreate","AllHousesComponent_ng_template_31_div_10_Template","AllHousesComponent_ng_template_31_div_15_Template","AllHousesComponent_ng_template_31_div_20_Template","AllHousesComponent_ng_template_31_div_25_Template","AllHousesComponent_ng_template_31_div_30_Template","AllHousesComponent_ng_template_31_div_35_Template","AllHousesComponent_ng_template_31_Template_button_click_38_listener","ctx_r28","ctx_r4","HouseCreate","AllHousesComponent","constructor","houseService","modalService","router","AuthorizeService","formBuilder","filterValue","activeModals","filteredHouses","filterInput","houses","isResident","housedetails","ngOnInit","manager","initializeFormEdit","initializeFormCreate","checkAutorization","pipe","subscribe","applyFilter","group","required","housesId","modalRef","open","editModal","push","getHousesDetails","next","response","setValue","valid","formData","value","houseId","UpdateHouse","_this","_asyncToGenerator","result","openConfirmationModal","deleteHouse","DeleteHouse","navigate","then","catch","getAccessToken","userRole","token","houseid","getHouseById","house","getHouses","onFilterInputChange","trim","filter","toLowerCase","includes","getAllHouses","data","openCreateModal","CreateModal","CreateHouse","createdHouse","role","forEach","dismiss","location","reload","ɵɵdirectiveInject","i1","HomesApiService","i2","NgbModal","i3","Router","i4","i5","FormBuilder","selectors","viewQuery","AllHousesComponent_Query","rf","ctx","AllHousesComponent_Template_input_ngModelChange_6_listener","$event","AllHousesComponent_Template_input_input_6_listener","AllHousesComponent_tr_25_Template","AllHousesComponent_Template_button_click_27_listener","AllHousesComponent_ng_template_29_Template","ɵɵtemplateRefExtractor","AllHousesComponent_ng_template_31_Template"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\all-houses\\all-houses.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\all-houses\\all-houses.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { House } from '../Models/house.model';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthorizeService } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-all-houses',\n  templateUrl: './all-houses.component.html',\n  styleUrls: ['./all-houses.component.css']\n})\nexport class AllHousesComponent {\n  @ViewChild('editModal') editModal!: ElementRef;\n  @ViewChild('CreateModal') CreateModal!: ElementRef;\n  @ViewChild('CreateModal') TestModal!: ElementRef;\n  HouseEdit!: FormGroup;\n  HouseCreate!: FormGroup;\n\n  filterValue = '';\n  activeModals: NgbModalRef[] = [];\n  housesId!: number;\n  filteredHouses: House[] = [];\n  filterInput: Subject<string> = new Subject<string>();\n  houses: House[] = [];\n  isManager: boolean = false;\n  isResident: boolean = false;\n  TestModaledit!: BsModalRef;\n\n  housedetails: House = {\n    id: 0,\n    number: 0,\n    street: '',\n    city: '',\n    country: '',\n    postcode: '',\n  }\n\n  constructor(private houseService: HomesApiService,\n    public modalService: NgbModal,\n    private router: Router,\n    private AuthorizeService: AuthorizeService,\n    private formBuilder: FormBuilder // Inject FormBuilder for Reactive Forms\n\n  ) {\n  }\n  ngOnInit(): void {\n    this.manager();\n    this.initializeFormEdit();\n    this.initializeFormCreate();\n    this.checkAutorization();\n    this.filterInput.pipe().subscribe((filterValue) => {\n      this.applyFilter(filterValue);\n    });\n\n  }\n\n\n\n  initializeFormEdit() {\n    this.HouseEdit = this.formBuilder.group({\n      id: [null, Validators.required],\n      number: [null, Validators.required],\n      city: [null, Validators.required],\n      country: [null, Validators.required],\n      postcode: [null, Validators.required],\n      street: [null, Validators.required],\n    });\n  }\n\n  initializeFormCreate() {\n    this.HouseCreate = this.formBuilder.group({\n      id: [null, Validators.required],\n      number: [null, Validators.required],\n      city: [null, Validators.required],\n      country: [null, Validators.required],\n      postcode: [null, Validators.required],\n      street: [null, Validators.required],\n    });\n  }\n\n  openEditModal(housesId: number) {\n    this.housesId = housesId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n\n    this.getHousesDetails(this.housesId).subscribe({\n      next: (response: House) => {\n        this.housedetails = response;\n        // Update the form with fetched data\n        this.HouseEdit.setValue({\n          id: response.id,\n          number: response.number,\n          city: response.city,\n          country: response.country,\n          postcode: response.postcode,\n          street: response.street,\n        });\n      },\n    });\n  }\n\n  onFormSubmitEdit() {\n    if (this.HouseEdit.valid) {\n      const formData = this.HouseEdit.value;\n      const houseId = formData.id;\n      this.houseService.UpdateHouse(houseId, formData).subscribe((response) => {\n      });\n      this.closeModalAndRefresh();\n\n    }\n  }\n\n  async Delete() {\n    const houseId = this.HouseEdit.get('id')?.value;\n    const result = this.openConfirmationModal();\n    if (await result) {\n      this.deleteHouse(houseId)\n    } else {\n    }\n  }\n  deleteHouse(houseId: number) {\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next: (response) => {\n        this.router.navigate(['all-houses'])\n        this.closeModalAndRefresh();\n      }\n    })\n  \n  }\n  openConfirmationModal(): Promise<boolean> {\n    const modalRef: NgbModalRef = this.modalService.open(DeleteConfirmationModalComponent);\n\n    return modalRef.result.then((result) => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n  ///\n  \n  checkAutorization() {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null && !this.isManager) {\n        const token: any = jwtDecode(userRole);\n        const houseid = token.houseid;\n        this.houseService.getHouseById(houseid).subscribe((house: any) => {\n          this.filteredHouses = [house];\n        });\n      }\n      else {\n        this.getHouses();\n      }\n    });\n  }\n\n onFilterInputChange() {\n  this.filterInput.next(this.filterValue);\n}\n\n\napplyFilter(filterValue: string) {\n  if (!filterValue.trim()) {\n    this.filteredHouses = this.houses;\n  } else {\n    this.filteredHouses = this.houses.filter((house) =>\n      house.street.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n}\n\n\n  getHouses() {\n    this.houseService.getAllHouses().subscribe((data: House[]) => {\n      this.houses = data;\n      this.filteredHouses = data;\n    });\n  }\n  getHousesDetails(housesId: number) {\n    return this.houseService.getHouseById(housesId);\n  }\n\n  // openEditModal(housesId: number) {\n  //   this.housesId = housesId;\n  //   const modalRef = this.modalService.open(this.editModal);\n  //   this.activeModals.push(modalRef);\n\n  //   this.getHousesDetails(this.housesId).subscribe({\n  //     next: (response: House) => {\n  //       this.housedetails = response;\n  //     }\n  //   });\n  // }\n  //////DELET!!!!!!!!!!!!!!!\n  openCreateModal(){\n    this.housedetails = {} as House;\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n  }\n  CreateHouse(houseService:House){\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next: (createdHouse) => {           \n      }\n    });\n    this.closeModalAndRefresh();\n  }\n    //////DELET!!!!!!!!!!!!!!!\n\n    UpdateHouse(house: House) {      \n      this.houseService.UpdateHouse(this.housedetails.id, this.housedetails).subscribe({\n        next: (response) => {\n        }\n      }); \n    this.closeModalAndRefresh();\n  \n}\n\n\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n\n\n\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigate(['all-houses']);\n    location.reload();\n  }\n}","<div class=\"container\">\n  <h2>All Houses</h2>\n  <div class=\"form-group\">\n    <label for=\"citySearch\">Search by Street:</label>\n    <input type=\"text\" [(ngModel)]=\"filterValue\" (input)=\"onFilterInputChange()\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Number</th>\n          <th>Street</th>\n          <th>City</th>\n          <th>Country</th>\n          <th>Postcode</th>\n          <th>View</th>\n          <th>Edit</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let house of filteredHouses\">\n          <td>{{ house.number }}</td>\n          <td>{{ house.street }}</td>\n          <td>{{ house.city }}</td>\n          <td>{{ house.country }}</td>\n          <td>{{ house.postcode }}</td>\n          <td><a class=\"btn btn-info\" [routerLink]=\"['/house', house.id]\">View</a></td>\n          <td><button class=\"btn btn-success\" [disabled]=\"!isManager\" (click)=\"(openEditModal(house.id))\">Edit</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <div class=\"row-sm-3\">\n      <button class=\"btn btn-warning col-sm-12\" [disabled]=\"!isManager\" (click)=\"(openCreateModal())\">Add House</button>\n    </div>\n  </div>\n  <ng-template #editModal>\n    <div class=\"container\">\n      <h2>House</h2>\n      <div class=\"\">\n        <form [formGroup]=\"HouseEdit\" (ngSubmit)=\"onFormSubmitEdit()\">\n          <div class=\"form-group row\">\n            <div class=\"col-sm-3\">\n              <label for=\"id\" class=\"form-label\">Id</label>\n              <input type=\"number\" class=\"form-control form-control-sm\" id=\"id\" formControlName=\"id\" required>\n              <div *ngIf=\"HouseEdit.get('id')?.hasError('required') && HouseEdit.get('id')?.touched\"\n                class=\"text-danger small\">Id is required</div>\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"number\" class=\"form-label\">Number</label>\n              <input type=\"number\" class=\"form-control form-control-sm\" id=\"number\" formControlName=\"number\" required>\n              <div *ngIf=\"HouseEdit.get('number')?.hasError('required') && HouseEdit.get('number')?.touched\"\n                class=\"text-danger small\">Number is required</div>\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"city\" class=\"form-label\">City</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"city\" formControlName=\"city\" required>\n              <div *ngIf=\"HouseEdit.get('city')?.hasError('required') && HouseEdit.get('city')?.touched\"\n                class=\"text-danger small\">City is required</div>\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"country\" class=\"form-label\">Country</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"country\" formControlName=\"country\" required>\n              <div *ngIf=\"HouseEdit.get('country')?.hasError('required') && HouseEdit.get('country')?.touched\"\n                class=\"text-danger small\">Country is required</div>\n\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"postcode\" class=\"form-label\">Postcode</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"postcode\" formControlName=\"postcode\" required>\n              <div *ngIf=\"HouseEdit.get('postcode')?.hasError('required') && HouseEdit.get('postcode')?.touched\"\n                class=\"text-danger small\">Postcode is required</div>\n            </div>\n\n            <div class=\"col-sm-6\">\n              <label for=\"street\" class=\"form-label\">Street</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"street\" formControlName=\"street\" required>\n              <div *ngIf=\"HouseEdit.get('street')?.hasError('required') && HouseEdit.get('street')?.touched\"\n                class=\"text-danger small\">Street is required</div>\n            </div>\n          </div>\n\n          <button type=\"submit\" class=\"btn btn-info\">Update</button>\n          <button type=\"button\" class=\"btn btn-danger\" *ngIf=\"isManager\" (click)=\"Delete()\">Delete</button>\n          <button class=\"btn btn-warning\"(click)=\"closeModalAndRefresh()\">Cancel</button>\n        </form>\n      </div>\n    </div>\n  </ng-template>\n\n\n\n  <ng-template #CreateModal>\n    <div class=\"container\">\n      <h2>House</h2>\n      <div class=\"\">\n        <form [formGroup]=\"HouseCreate\" (ngSubmit)=\"onFormSubmitCreate()\">\n          <div class=\"form-group row\">\n            <div class=\"col-sm-3\">\n              <label for=\"id\" class=\"form-label\">Id</label>\n              <input type=\"number\" class=\"form-control form-control-sm\" id=\"id\" formControlName=\"id\" required>\n              <div *ngIf=\"HouseCreate.get('id')?.hasError('required') && HouseCreate.get('id')?.touched\"\n                class=\"text-danger small\">Id is required</div>\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"number\" class=\"form-label\">Number</label>\n              <input type=\"number\" class=\"form-control form-control-sm\" id=\"number\" formControlName=\"number\" required>\n              <div *ngIf=\"HouseCreate.get('number')?.hasError('required') && HouseCreate.get('number')?.touched\"\n                class=\"text-danger small\">Number is required</div>\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"city\" class=\"form-label\">City</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"city\" formControlName=\"city\" required>\n              <div *ngIf=\"HouseCreate.get('city')?.hasError('required') && HouseCreate.get('city')?.touched\"\n                class=\"text-danger small\">City is required</div>\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"country\" class=\"form-label\">Country</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"country\" formControlName=\"country\" required>\n              <div *ngIf=\"HouseCreate.get('country')?.hasError('required') && HouseCreate.get('country')?.touched\"\n                class=\"text-danger small\">Country is required</div>\n\n            </div>\n\n            <div class=\"col-sm-3\">\n              <label for=\"postcode\" class=\"form-label\">Postcode</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"postcode\" formControlName=\"postcode\" required>\n              <div *ngIf=\"HouseCreate.get('postcode')?.hasError('required') && HouseCreate.get('postcode')?.touched\"\n                class=\"text-danger small\">Postcode is required</div>\n            </div>\n\n            <div class=\"col-sm-6\">\n              <label for=\"street\" class=\"form-label\">Street</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" id=\"street\" formControlName=\"street\" required>\n              <div *ngIf=\"HouseCreate.get('street')?.hasError('required') && HouseCreate.get('street')?.touched\"\n                class=\"text-danger small\">Street is required</div>\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-info\">Add</button>\n          <button class=\"btn btn-warning\"(click)=\"closeModalAndRefresh()\">Cancel</button>\n        </form>\n      </div>\n    </div>\n  </ng-template>\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}