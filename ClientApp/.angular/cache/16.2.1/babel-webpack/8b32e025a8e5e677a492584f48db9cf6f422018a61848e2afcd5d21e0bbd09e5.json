{"ast":null,"code":"var _class;\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HomesApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7281/api';\n  }\n  getAllHouses() {\n    return this.http.get(`${this.apiUrl}/houses`);\n  }\n  getHouseById(id) {\n    return this.http.get(`${this.apiUrl}/houses/${id}`);\n  }\n  GetHouseApartments(houseId) {\n    return this.http.get(`${this.apiUrl}/houses/${houseId}/apartments`);\n  }\n  UpdateHouse(id, house) {\n    return this.http.put(`${this.apiUrl}/houses/${id}`, house);\n  }\n  UpdateApartment(id, apartment) {\n    return this.http.put(`${this.apiUrl}/apartments/${id}`, apartment);\n  }\n  GetApartmentById(id) {\n    return this.http.get(`${this.apiUrl}/apartments/${id}`);\n  }\n  GetApartmentsResident(apartmentId) {\n    return this.http.get(`${this.apiUrl}/apartments/${apartmentId}/residents`);\n  }\n  DeleteHouse(id) {\n    return this.http.delete(`${this.apiUrl}/houses/${id}`);\n  }\n  DeleteApartment(id) {\n    return this.http.delete(`${this.apiUrl}/apartments/${id}`);\n  }\n  CreateApartment(apartmentcreate) {\n    apartmentcreate.id = 0;\n    return this.http.post(this.apiUrl + '/apartments', apartmentcreate);\n  }\n  CreateHouse(housecreate) {\n    housecreate.id = 0;\n    return this.http.post(this.apiUrl + '/houses', housecreate);\n  }\n  GetResidentById(id) {\n    return this.http.get(`${this.apiUrl}/residents/${id}`);\n  }\n  DeleteResident(id) {\n    return this.http.delete(`${this.apiUrl}/residents/${id}`);\n  }\n  UpdateResident(id, resident) {\n    return this.http.put(`${this.apiUrl}/residents/${id}`, resident);\n  }\n  CreateResident(residentcreate) {\n    residentcreate.id = 0;\n    return this.http.post(this.apiUrl + '/residents', residentcreate);\n  }\n  doesHouseExistByNumber(numberToCheck) {\n    return this.getAllHouses().pipe(map(houses => houses.some(house => house.number === numberToCheck)));\n  }\n}\n_class = HomesApiService;\n_class.ɵfac = function HomesApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","HomesApiService","constructor","http","apiUrl","getAllHouses","get","getHouseById","id","GetHouseApartments","houseId","UpdateHouse","house","put","UpdateApartment","apartment","GetApartmentById","GetApartmentsResident","apartmentId","DeleteHouse","delete","DeleteApartment","CreateApartment","apartmentcreate","post","CreateHouse","housecreate","GetResidentById","DeleteResident","UpdateResident","resident","CreateResident","residentcreate","doesHouseExistByNumber","numberToCheck","pipe","houses","some","number","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\Services\\homes-api.service.ts"],"sourcesContent":["import { Resident } from './../Models/resident.model';\nimport { Apartment } from './../Models/apartment.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\nimport { House } from '../Models/house.model';\n@Injectable({\n  providedIn: 'root', // Or specify a module if needed\n})\nexport class HomesApiService {\n\n   private apiUrl= 'https://localhost:7281/api'\n\n  constructor(private http: HttpClient) {}\n\n  getAllHouses(): Observable<House[]> {\n    return this.http.get<House[]>(`${this.apiUrl}/houses`);\n  }\n\n  getHouseById(id: number): Observable<House> {\n    return this.http.get<House>(`${this.apiUrl}/houses/${id}`);\n  }\n  \n  GetHouseApartments(houseId: number): Observable<Apartment[]> {\n    return this.http.get<Apartment[]>(`${this.apiUrl}/houses/${houseId}/apartments`);\n  }\n  UpdateHouse(id: number, house: House): Observable<any> {\n    return this.http.put(`${this.apiUrl}/houses/${id}`, house);\n  }\n  UpdateApartment(id: number, apartment: Apartment): Observable<any> {\n    return this.http.put(`${this.apiUrl}/apartments/${id}`, apartment);\n  }\n  GetApartmentById(id: number):Observable<Apartment>{\n    return this.http.get<Apartment>(`${this.apiUrl}/apartments/${id}`);\n\n  }\n  GetApartmentsResident(apartmentId:number):Observable<Resident[]>{\n    return this.http.get<Resident[]>(`${this.apiUrl}/apartments/${apartmentId}/residents`);\n  }\n  DeleteHouse(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/houses/${id}`);\n  }\n  DeleteApartment(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/apartments/${id}`);\n  }\n  CreateApartment(apartmentcreate: Apartment):Observable<Apartment>{\n    apartmentcreate.id=0;\n    return this.http.post<Apartment>(this.apiUrl+'/apartments',apartmentcreate);\n  }\n  CreateHouse(housecreate: House):Observable<House>{\n    housecreate.id=0;\n    return this.http.post<House>(this.apiUrl+'/houses',housecreate);\n  }\n  GetResidentById(id: number): Observable<Resident> {\n    return this.http.get<Resident>(`${this.apiUrl}/residents/${id}`);\n  }\n  DeleteResident(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/residents/${id}`);\n  }\n  UpdateResident(id: number, resident: Resident): Observable<any> {\n    return this.http.put(`${this.apiUrl}/residents/${id}`, resident);\n  }\n  CreateResident(residentcreate: Resident):Observable<Resident>{\n    residentcreate.id=0;\n    return this.http.post<Resident>(this.apiUrl+'/residents',residentcreate);\n  }\n  doesHouseExistByNumber(numberToCheck: number): Observable<boolean> {\n    return this.getAllHouses().pipe(\n      map((houses: any[]) => houses.some(house => house.number === numberToCheck))\n    );}\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}