{"ast":null,"code":"var _class;\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"..//Services/homes-api.service\";\nimport * as i3 from \"src/api-authorization/authorize.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/apartments\", a1, \"residents\"];\n};\nfunction HouseDetailComponent_tr_61_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"a\", 23);\n    i0.ɵɵtext(17, \"View\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"td\")(19, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function HouseDetailComponent_tr_61_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const apartment_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.navigateToApartmentResidents(apartment_r2.id));\n    });\n    i0.ɵɵtext(20, \"View Residents\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const apartment_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r2.number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r2.floor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r2.numberOfRooms);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r2.population);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r2.fullArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apartment_r2.livingSpace);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, apartment_r2.id));\n  }\n}\nexport class HouseDetailComponent {\n  constructor(route, router, houseService, AuthorizeService) {\n    this.route = route;\n    this.router = router;\n    this.houseService = houseService;\n    this.AuthorizeService = AuthorizeService;\n    this.isManager = false;\n    this.isResident = false;\n    this.housedetails = {\n      id: 0,\n      number: 0,\n      street: '',\n      city: '',\n      country: '',\n      postcode: ''\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.route.params.subscribe(params => {\n      this.houseId = +params['id'];\n      this.getHouseDetails(this.houseId).subscribe({\n        next: response => {\n          this.housedetails = response;\n        }\n      });\n      this.getApartmentsByHouseId(this.houseId);\n    });\n  }\n  navigateToApartmentResidents(apartmentId) {\n    this.router.navigate(['apartments', apartmentId, 'residents']);\n  }\n  getHouseDetails(houseId) {\n    return this.houseService.getHouseById(houseId);\n  }\n  getApartmentsByHouseId(houseId) {\n    this.houseService.GetHouseApartments(houseId).subscribe(apartments => {\n      this.apartments = apartments;\n    }, error => {\n      console.error('Error fetching apartments:', error);\n    });\n  }\n  updateHouse() {\n    this.houseService.UpdateHouse(this.housedetails.id, this.housedetails).subscribe({\n      next: response => {\n        this.router.navigate(['all-houses']);\n      }\n    });\n  }\n  deleteHouse(houseId) {\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next: response => {\n        this.router.navigate(['all-houses']);\n      }\n    });\n  }\n  addHouse(house) {\n    console.log(house);\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next: house => {\n        console.log(house);\n        this.router.navigate(['all-houses']);\n      }\n    });\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n}\n_class = HouseDetailComponent;\n_class.ɵfac = function HouseDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HomesApiService), i0.ɵɵdirectiveInject(i3.AuthorizeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-house-detail\"]],\n  decls: 62,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"\"], [\"form\", \"ngForm\"], [1, \"form-group\", \"row\"], [1, \"col-sm-3\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"id\", \"name\", \"id\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"number\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"number\", \"name\", \"number\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"street\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"street\", \"name\", \"street\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"country\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"country\", \"name\", \"country\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"postcode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"postcode\", \"name\", \"postcode\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row-sm-3\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLinkActive\", \"active\", 1, \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function HouseDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"House\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", null, 2)(6, \"div\", 3)(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function HouseDetailComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.housedetails.id = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function HouseDetailComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.housedetails.number = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 9);\n      i0.ɵɵtext(17, \"Street\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function HouseDetailComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.housedetails.street = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function HouseDetailComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.housedetails.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 13);\n      i0.ɵɵtext(25, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function HouseDetailComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.housedetails.country = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 15);\n      i0.ɵɵtext(29, \"Postcode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function HouseDetailComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.housedetails.postcode = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 17)(32, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function HouseDetailComponent_Template_button_click_32_listener() {\n        return ctx.updateHouse();\n      });\n      i0.ɵɵtext(33, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function HouseDetailComponent_Template_button_click_34_listener() {\n        return ctx.deleteHouse(ctx.housedetails.id);\n      });\n      i0.ɵɵtext(35, \"Delete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function HouseDetailComponent_Template_button_click_36_listener() {\n        return ctx.addHouse(ctx.housedetails);\n      });\n      i0.ɵɵtext(37, \"Create\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(38, \"div\", 0)(39, \"h2\");\n      i0.ɵɵtext(40, \"All Apartments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"table\", 21)(42, \"thead\")(43, \"tr\")(44, \"th\");\n      i0.ɵɵtext(45, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"th\");\n      i0.ɵɵtext(47, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"th\");\n      i0.ɵɵtext(49, \"Floor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"th\");\n      i0.ɵɵtext(51, \"Number of Rooms\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"th\");\n      i0.ɵɵtext(53, \"Population\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"th\");\n      i0.ɵɵtext(55, \"Full Area\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"th\");\n      i0.ɵɵtext(57, \"Living Space\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"th\");\n      i0.ɵɵtext(59, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(60, \"tbody\");\n      i0.ɵɵtemplate(61, HouseDetailComponent_tr_61_Template, 21, 10, \"tr\", 22);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.housedetails.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.housedetails.number);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.housedetails.street);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.housedetails.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.housedetails.country);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.housedetails.postcode);\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngForOf\", ctx.apartments);\n    }\n  },\n  dependencies: [i4.NgForOf, i1.RouterLink, i1.RouterLinkActive, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG91c2UtZGV0YWlsL2hvdXNlLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIioge1xuICAgIG1hcmdpbjogMTBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["jwtDecode","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HouseDetailComponent_tr_61_Template_button_click_19_listener","restoredCtx","ɵɵrestoreView","_r4","apartment_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","navigateToApartmentResidents","id","ɵɵadvance","ɵɵtextInterpolate","number","floor","numberOfRooms","population","fullArea","livingSpace","ɵɵproperty","ɵɵpureFunction1","_c0","HouseDetailComponent","constructor","route","router","houseService","AuthorizeService","isManager","isResident","housedetails","street","city","country","postcode","ngOnInit","manager","params","subscribe","houseId","getHouseDetails","next","response","getApartmentsByHouseId","apartmentId","navigate","getHouseById","GetHouseApartments","apartments","error","console","updateHouse","UpdateHouse","deleteHouse","DeleteHouse","addHouse","house","log","CreateHouse","getAccessToken","userRole","token","role","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","HomesApiService","i3","selectors","decls","vars","consts","template","HouseDetailComponent_Template","rf","ctx","HouseDetailComponent_Template_input_ngModelChange_10_listener","$event","HouseDetailComponent_Template_input_ngModelChange_14_listener","HouseDetailComponent_Template_input_ngModelChange_18_listener","HouseDetailComponent_Template_input_ngModelChange_22_listener","HouseDetailComponent_Template_input_ngModelChange_26_listener","HouseDetailComponent_Template_input_ngModelChange_30_listener","HouseDetailComponent_Template_button_click_32_listener","HouseDetailComponent_Template_button_click_34_listener","HouseDetailComponent_Template_button_click_36_listener","ɵɵtemplate","HouseDetailComponent_tr_61_Template"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\tets\\VmihailovUi\\ClientApp\\src\\app\\house-detail\\house-detail.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\tets\\VmihailovUi\\ClientApp\\src\\app\\house-detail\\house-detail.component.html"],"sourcesContent":["import { House } from './../Models/house.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { HomesApiService } from '..//Services/homes-api.service'; \nimport { Apartment } from '../Models/apartment.model'; \nimport { Injectable } from '@angular/core';\nimport { AuthorizeService } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\n\n@Component({\n  selector: 'app-house-detail',\n  templateUrl: './house-detail.component.html',\n  styleUrls: ['./house-detail.component.css']\n})\nexport class HouseDetailComponent implements OnInit {\n  houseId: number | undefined;\n  isManager: boolean = false;\n  apartmentId: number | undefined;\n  isResident: boolean = false;\n  house: House | undefined;\n  apartments: Apartment[]| undefined;\n  showEditForm: boolean | undefined;\n  housedetails:House={\n    id: 0,\n    number: 0,\n    street: '',\n    city: '',\n    country: '',\n    postcode: '',\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router:Router, \n    private houseService: HomesApiService,\n    private AuthorizeService: AuthorizeService\n\n  ) { }\n  ngOnInit(): void {\n    this.manager();\n    this.route.params.subscribe(params => {\n      this.houseId = +params['id']; \n      this.getHouseDetails(this.houseId).subscribe({\n        next: (response: House) => {\n          this.housedetails = response;\n        }\n      });\n      this.getApartmentsByHouseId(this.houseId);\n    });\n  }\n  navigateToApartmentResidents(apartmentId: number) {\n    this.router.navigate(['apartments', apartmentId, 'residents']);\n  }\n  \n  getHouseDetails(houseId: number) {\n    return this.houseService.getHouseById(houseId);\n  }\n  \n  \n  getApartmentsByHouseId(houseId: number) {\n    this.houseService.GetHouseApartments(houseId).subscribe(\n      (apartments: Apartment[]) => {\n        this.apartments = apartments;\n      },\n      (error) => {\n        console.error('Error fetching apartments:', error);\n      }\n    );\n  }\n  updateHouse(){\n    this.houseService.UpdateHouse(this.housedetails.id,this.housedetails).subscribe({\n      next:(response)=>{\n        this.router.navigate(['all-houses'])\n      }\n    })\n  }\n  deleteHouse(houseId: number){\n    this.houseService.DeleteHouse(houseId).subscribe({\n      next:(response)=>{\n        this.router.navigate(['all-houses'])\n      }\n    })\n  }\n  addHouse(house:House){\n    console.log(house);\n    this.houseService.CreateHouse(this.housedetails).subscribe({\n      next:(house)=>{\n        console.log(house);\n        this.router.navigate(['all-houses'])\n      }\n    })\n  }\n\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n        \n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n  <h2>House</h2>\n  <div class=\"\">\n    <form #form=\"ngForm\">\n      <div class=\"form-group row \">\n      <div class=\"col-sm-3 \">\n        <label for=\"id\" class=\"form-label\">Id</label>\n        <input type=\"number\" class=\"form-control form-control-sm\" id=\"id\" name=\"id\" [(ngModel)]=\"housedetails.id\">\n      </div>\n      <div class=\"col-sm-3 \">\n        <label for=\"number\" class=\"form-label\">Number</label>\n        <input type=\"number\" class=\"form-control form-control-sm\" id=\"number\" name=\"number\" [(ngModel)]=\"housedetails.number\">\n      </div>\n      <div class=\"col-sm-3 \">\n        <label for=\"street\" class=\"form-label\">Street</label>\n        <input type=\"text\" class=\"form-control form-control-sm\" id=\"street\" name=\"street\" [(ngModel)]=\"housedetails.street\">\n      </div>\n      <div class=\"col-sm-3 \">\n        <label for=\"city\" class=\"form-label\">City</label>\n        <input type=\"text\" class=\"form-control form-control-sm\" id=\"city\" name=\"city\" [(ngModel)]=\"housedetails.city\">\n      </div>\n      <div class=\"col-sm-3 \">\n        <label for=\"country\" class=\"form-label\">Country</label>\n        <input type=\"text\" class=\"form-control form-control-sm\" id=\"country\" name=\"country\" [(ngModel)]=\"housedetails.country\">\n      </div>\n      <div class=\"col-sm-3 \">\n        <label for=\"postcode\" class=\"form-label\">Postcode</label>\n        <input type=\"text\" class=\"form-control form-control-sm\" id=\"postcode\" name=\"postcode\" [(ngModel)]=\"housedetails.postcode\">\n      </div>\n      <div class=\"row-sm-3\">\n        <button class=\"btn btn-warning\"(click)=\"updateHouse()\">Save</button>\n        <button class=\"btn btn-danger\" (click)=\"deleteHouse(housedetails.id)\">Delete</button>\n        <button class=\"btn btn-info\" (click)=\"addHouse(housedetails)\">Create</button>\n      </div>\n    </div>\n    </form>\n    \n  </div>\n\n\n</div>\n\n\n\n<div class=\"container\">\n    <h2>All Apartments</h2>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Number</th>\n          <th>Floor</th>\n          <th>Number of Rooms</th>\n          <th>Population</th>\n          <th>Full Area</th>\n          <th>Living Space</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let apartment of apartments\">\n          <td>{{ apartment.id }}</td>\n          <td>{{ apartment.number }}</td>\n          <td>{{ apartment.floor }}</td>\n          <td>{{ apartment.numberOfRooms }}</td>\n          <td>{{ apartment.population }}</td>\n          <td>{{ apartment.fullArea }}</td>\n          <td>{{ apartment.livingSpace }}</td>\n          <td><a class=\"btn btn-success\" [routerLink]=\"['/apartments', apartment.id, 'residents']\" routerLinkActive=\"active\">View</a></td>\n          <td><button class=\"btn btn-success\" (click)=\"navigateToApartmentResidents(apartment.id)\">View Residents</button></td>\n\n        </tr>\n      </tbody>\n    </table>\n  </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}