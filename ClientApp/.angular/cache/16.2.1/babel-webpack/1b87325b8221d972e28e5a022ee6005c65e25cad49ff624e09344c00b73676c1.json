{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/VladislavMihailov/source/repos/vladislavm-ui/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport jwtDecode from 'jwt-decode';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport { HouseDetailComponent } from '../house-detail/house-detail.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../Services/homes-api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/api-authorization/authorize.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = [\"editModal\"];\nfunction ApartmentComponent_tr_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\")(21, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_tr_32_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const resident_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.openEditModal(resident_r3.id));\n    });\n    i0.ɵɵtext(22, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const resident_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r3.surname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r3.personalCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 10, resident_r3.dateOfBirth));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(resident_r3.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r3.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r3.isOwner ? \"Yes\" : \"No\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r3.apartmentId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.isManager || resident_r3.email === ctx_r0.currentUser));\n  }\n}\nfunction ApartmentComponent_ng_template_36_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const apartment_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", apartment_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(apartment_r8.id);\n  }\n}\nfunction ApartmentComponent_ng_template_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"Resident Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"form\", null, 7)(6, \"div\", 8)(7, \"label\", 9);\n    i0.ɵɵtext(8, \"Id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.residentdetails.id = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n    i0.ɵɵtext(12, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.residentdetails.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n    i0.ɵɵtext(16, \"Surname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.residentdetails.surname = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 8)(19, \"label\", 14);\n    i0.ɵɵtext(20, \"Personal Code:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.residentdetails.personalCode = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 16);\n    i0.ɵɵtext(24, \"Date of Birth:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.residentdetails.dateOfBirth = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 8)(27, \"label\", 18);\n    i0.ɵɵtext(28, \"Phone:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.residentdetails.phone = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 8)(31, \"label\", 20);\n    i0.ɵɵtext(32, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_33_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.residentdetails.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 22)(35, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_input_ngModelChange_35_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.residentdetails.isOwner = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"label\", 24);\n    i0.ɵɵtext(37, \"Is Owner\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 25)(39, \"label\", 26);\n    i0.ɵɵtext(40, \"ApartmentId:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"select\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function ApartmentComponent_ng_template_36_Template_select_ngModelChange_41_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.residentdetails.apartmentId = $event);\n    });\n    i0.ɵɵtemplate(42, ApartmentComponent_ng_template_36_option_42_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(43, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_36_Template_button_click_43_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.checkAndUpdateHouse(ctx_r19.residentdetails));\n    });\n    i0.ɵɵtext(44, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_36_Template_button_click_45_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.Delete(ctx_r20.residentdetails.id));\n    });\n    i0.ɵɵtext(46, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_36_Template_button_click_47_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.closeModalAndRefresh());\n    });\n    i0.ɵɵtext(48, \"Cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.surname);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.personalCode);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.dateOfBirth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.phone);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.isOwner);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.residentdetails.apartmentId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.apartments);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.isManager);\n  }\n}\nexport class ApartmentComponent {\n  constructor(modalService, houseService, route, router, AuthorizeService) {\n    this.modalService = modalService;\n    this.houseService = houseService;\n    this.route = route;\n    this.router = router;\n    this.AuthorizeService = AuthorizeService;\n    this.isManager = false;\n    this.isResident = false;\n    this.apartments = [];\n    this.activeModals = [];\n    this.apartmentdetails = {\n      id: 0,\n      number: 0,\n      floor: 0,\n      numberOfRooms: 0,\n      population: 0,\n      fullArea: 0,\n      livingSpace: 0,\n      houseId: 0\n    };\n    this.residentdetails = {\n      id: 0,\n      name: '',\n      surname: '',\n      personalCode: '',\n      dateOfBirth: new Date(2000, 0, 1),\n      phone: '',\n      email: '',\n      isOwner: false,\n      apartmentId: 0\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.getApartments();\n    this.route.params.subscribe(params => {\n      this.apartmentId = +params['id'];\n    });\n    this.getApartmentsResidents(this.apartmentId);\n    this.AuthorizeService.getUser().subscribe(data => {\n      if (data && data.name) {\n        this.currentUser = data.name;\n      }\n    });\n  }\n  getApartments() {\n    this.houseService.getAllApartments().subscribe(data => {\n      this.apartments = data;\n    });\n  }\n  getAllApartments() {\n    return this.houseService.getAllApartments();\n  }\n  getResidentDetails(residentId) {\n    return this.houseService.GetResidentById(residentId);\n  }\n  getApartmentsResidents(Apartmentid) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(residents => {\n      this.residents = residents;\n    });\n  }\n  openEditModal(residentId) {\n    this.residentId = residentId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n    this.getAllApartments();\n    this.getResidentDetails(this.residentId).subscribe({\n      next: response => {\n        this.residentdetails = response;\n      }\n    });\n  }\n  openEditModalEditApartment(apartmentId) {\n    const modalRef = this.modalService.open(HouseDetailComponent);\n    modalRef.componentInstance.apartmentId = apartmentId;\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n  checkAndUpdateHouse(resdident) {\n    const houseNumberToCheck = resdident.personalCode;\n    this.houseService.doesResidentExistByNumber(houseNumberToCheck, resdident.apartmentId).subscribe(exists => {\n      if (exists) {\n        this.houseService.UpdateResident(this.residentdetails.id, this.residentdetails).subscribe(() => {});\n      } else if (!exists && this.isManager) {\n        this.houseService.CreateResident(this.residentdetails).subscribe(() => {});\n      }\n    });\n    this.closeModalAndRefresh();\n  }\n  Delete(resdidentid) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const result = _this.openConfirmationModal();\n      if (yield result) {\n        _this.deleteResident(resdidentid);\n      } else {}\n    })();\n  }\n  deleteResident(residentId) {\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: response => {\n        this.closeModalAndRefresh();\n      }\n    });\n  }\n  openConfirmationModal() {\n    const modalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    this.activeModals.push(modalRef);\n    return modalRef.result.then(result => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigateByUrl('/', {\n      skipLocationChange: true\n    }).then(() => this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']));\n    location.reload();\n  }\n}\n_class = ApartmentComponent;\n_class.ɵfac = function ApartmentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.HomesApiService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthorizeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-apartment\"]],\n  viewQuery: function ApartmentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editModal = _t.first);\n    }\n  },\n  decls: 38,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [\"editModal\", \"\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"form\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"name\", \"id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"surname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"surname\", \"name\", \"surname\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"personalCode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"personalCode\", \"name\", \"personalCode\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone\", \"name\", \"phone\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isOwner\", \"name\", \"isOwner\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"isOwner\", 1, \"form-check-label\"], [1, \"mb-3\", \"form-check\", \"apartmentidclass\"], [\"for\", \"apartmentId\", 1, \"form-label\"], [\"name\", \"residentdetails.apartmentId\", \"size\", \"1\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [3, \"value\"]],\n  template: function ApartmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 0);\n      i0.ɵɵelement(5, \"table\", 2);\n      i0.ɵɵelementStart(6, \"h2\");\n      i0.ɵɵtext(7, \"Residents\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"table\", 2)(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Personal Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Is Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Apartment ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\");\n      i0.ɵɵtext(30, \"Edit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"tbody\");\n      i0.ɵɵtemplate(32, ApartmentComponent_tr_32_Template, 23, 12, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\")(34, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ApartmentComponent_Template_button_click_34_listener() {\n        return ctx.openEditModal(ctx.apartmentdetails.id);\n      });\n      i0.ɵɵtext(35, \"Add Resident\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(36, ApartmentComponent_ng_template_36_Template, 49, 11, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Apartment:\", ctx.apartmentdetails.number, \"\");\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngForOf\", ctx.residents);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i5.DatePipe],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n.apartmentidclass[_ngcontent-%COMP%]{\\n    margin: 10px;\\n    padding: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBhcnRtZW50L2FwYXJ0bWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG4uYXBhcnRtZW50aWRjbGFzc3tcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgcGFkZGluZzogMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["jwtDecode","DeleteConfirmationModalComponent","HouseDetailComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ApartmentComponent_tr_32_Template_button_click_21_listener","restoredCtx","ɵɵrestoreView","_r5","resident_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","openEditModal","id","ɵɵadvance","ɵɵtextInterpolate","name","surname","personalCode","ɵɵpipeBind1","dateOfBirth","phone","email","isOwner","apartmentId","ɵɵproperty","ctx_r0","isManager","currentUser","apartment_r8","ApartmentComponent_ng_template_36_Template_input_ngModelChange_9_listener","$event","_r10","ctx_r9","residentdetails","ApartmentComponent_ng_template_36_Template_input_ngModelChange_13_listener","ctx_r11","ApartmentComponent_ng_template_36_Template_input_ngModelChange_17_listener","ctx_r12","ApartmentComponent_ng_template_36_Template_input_ngModelChange_21_listener","ctx_r13","ApartmentComponent_ng_template_36_Template_input_ngModelChange_25_listener","ctx_r14","ApartmentComponent_ng_template_36_Template_input_ngModelChange_29_listener","ctx_r15","ApartmentComponent_ng_template_36_Template_input_ngModelChange_33_listener","ctx_r16","ApartmentComponent_ng_template_36_Template_input_ngModelChange_35_listener","ctx_r17","ApartmentComponent_ng_template_36_Template_select_ngModelChange_41_listener","ctx_r18","ɵɵtemplate","ApartmentComponent_ng_template_36_option_42_Template","ApartmentComponent_ng_template_36_Template_button_click_43_listener","ctx_r19","checkAndUpdateHouse","ApartmentComponent_ng_template_36_Template_button_click_45_listener","ctx_r20","Delete","ApartmentComponent_ng_template_36_Template_button_click_47_listener","ctx_r21","closeModalAndRefresh","ctx_r2","apartments","ApartmentComponent","constructor","modalService","houseService","route","router","AuthorizeService","isResident","activeModals","apartmentdetails","number","floor","numberOfRooms","population","fullArea","livingSpace","houseId","Date","ngOnInit","manager","getApartments","params","subscribe","getApartmentsResidents","getUser","data","getAllApartments","getResidentDetails","residentId","GetResidentById","Apartmentid","GetApartmentsResident","residents","modalRef","open","editModal","push","next","response","openEditModalEditApartment","componentInstance","getAccessToken","userRole","token","role","resdident","houseNumberToCheck","doesResidentExistByNumber","exists","UpdateResident","CreateResident","resdidentid","_this","_asyncToGenerator","result","openConfirmationModal","deleteResident","DeleteResident","then","catch","forEach","dismiss","navigateByUrl","skipLocationChange","navigate","location","reload","ɵɵdirectiveInject","i1","NgbModal","i2","HomesApiService","i3","ActivatedRoute","Router","i4","selectors","viewQuery","ApartmentComponent_Query","rf","ctx","ɵɵelement","ApartmentComponent_tr_32_Template","ApartmentComponent_Template_button_click_34_listener","ApartmentComponent_ng_template_36_Template","ɵɵtemplateRefExtractor","ɵɵtextInterpolate1"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.html"],"sourcesContent":["\nimport { Apartment } from './../Models/apartment.model';\nimport { Resident } from './../Models/resident.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { FormGroup } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AuthorizeService, IUser } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport { Observable, map } from 'rxjs';\nimport { HouseDetailComponent } from '../house-detail/house-detail.component';\n\n\n@Component({\n  selector: 'app-apartment',\n  templateUrl: './apartment.component.html',\n  styleUrls: ['./apartment.component.css']\n})\n\n\n\n\nexport class ApartmentComponent implements OnInit {\n  @ViewChild('editModal') editModal!: ElementRef;\n  apartmentId!: number;\n  residentId!: number;\n  isManager: boolean = false;\n  isResident: boolean = false;\n  apartments: Apartment[] = [];\n  activeModals: NgbModalRef[] = [];\n  residents!: Resident[];\n  currentUser: any;\n  apartmentdetails: Apartment = {\n    id: 0,\n    number: 0,\n    floor: 0,\n    numberOfRooms: 0,\n    population: 0,\n    fullArea: 0,\n    livingSpace: 0,\n    houseId: 0\n  }\n  residentdetails: Resident = {\n    id: 0,\n    name: '',\n    surname: '',\n    personalCode: '',\n    dateOfBirth: new Date(2000, 0, 1),\n    phone: '',\n    email: '',\n    isOwner: false,\n    apartmentId: 0\n  }\n  constructor(\n    public modalService: NgbModal,\n    private houseService: HomesApiService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private AuthorizeService: AuthorizeService,\n  ) { }\n\n  ngOnInit() {\n    this.manager();\n    this.getApartments();\n    this.route.params.subscribe(params => {\n      this.apartmentId = +params['id'];\n    });\n    this.getApartmentsResidents(this.apartmentId);\n    this.AuthorizeService.getUser().subscribe(data => {\n      if (data && data.name) {\n        this.currentUser = data.name;\n      }\n    });\n    \n  }\n  \n  getApartments() {\n    this.houseService.getAllApartments().subscribe((data: Apartment[]) => {\n      this.apartments = data; \n    });\n  }\n\n  getAllApartments() {\n    return this.houseService.getAllApartments();\n  }\n  \n  getResidentDetails(residentId: number) {\n    return this.houseService.GetResidentById(residentId);\n  }\n\n  getApartmentsResidents(Apartmentid: number) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(\n      (residents: Resident[]) => {\n        this.residents = residents;\n       \n      },\n    );\n  }\n\n  openEditModal(residentId: number) {\n    this.residentId = residentId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n    this.getAllApartments();\n    this.getResidentDetails(this.residentId).subscribe({\n      next: (response: Resident) => {\n        this.residentdetails = response;\n      }\n    });\n\n  }\n  openEditModalEditApartment(apartmentId: number) {\n    const modalRef = this.modalService.open(HouseDetailComponent);\n    modalRef.componentInstance.apartmentId = apartmentId;\n  }\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n  checkAndUpdateHouse(resdident: Resident) {\n    const houseNumberToCheck = resdident.personalCode;\n    this.houseService.doesResidentExistByNumber(houseNumberToCheck, resdident.apartmentId).subscribe((exists) => {\n      if (exists) {\n        this.houseService.UpdateResident(this.residentdetails.id, this.residentdetails).subscribe(() => {\n        });\n      } else if (!exists && this.isManager) {\n        this.houseService.CreateResident(this.residentdetails).subscribe(() => {\n        });\n      }\n    });\n    this.closeModalAndRefresh();\n\n  }\n\n\n  async Delete(resdidentid: number) {\n    const result = this.openConfirmationModal();\n    if (await result) {\n      this.deleteResident(resdidentid)\n    } else {\n    }\n  }\n  deleteResident(residentId: number) {\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: (response) => {\n        this.closeModalAndRefresh();\n      }\n    })\n  }\n  openConfirmationModal(): Promise<boolean> {\n    const modalRef: NgbModalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    this.activeModals.push(modalRef);\n\n\n    return modalRef.result.then((result) => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n      this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']))\n      location.reload();\n  }\n   \n\n}\n","<div class=\"container\">\n  <h2>Apartment:{{apartmentdetails.number}}</h2>\n  <div class=\"\">\n\n\n  </div>\n\n\n</div>\n<div class=\"container\">\n  <table class=\"table\">\n  </table>\n  <h2>Residents</h2>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Surname</th>\n        <th>Personal Code</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Email</th>\n        <th>Is Owner</th>\n        <th>Apartment ID</th>\n        <th>Edit</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let resident of residents\">\n        <td>{{ resident.id }}</td>\n        <td>{{ resident.name }}</td>\n        <td>{{ resident.surname }}</td>\n        <td>{{ resident.personalCode }}</td>\n        <td>{{ resident.dateOfBirth | date }}</td>\n        <td>{{ resident.phone }}</td>\n        <td>{{ resident.email }}</td>\n        <td>{{ resident.isOwner ? 'Yes' : 'No' }}</td>\n        <td>{{ resident.apartmentId }}</td>\n        <td>\n          <button class=\"btn btn-success\" [disabled]=\"!(isManager || resident.email === currentUser)\"\n            (click)=\"openEditModal(resident.id)\">Edit</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div>\n  <button class=\"btn btn-warning\"  (click)=\"openEditModal(apartmentdetails.id)\">Add Resident</button>\n  </div>\n</div>\n\n<ng-template #editModal>\n\n  <div class=\"container\">\n    <h2>Resident Details</h2>\n    <div>\n      <form #form=\"ngForm\" >\n        <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Id:</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" [(ngModel)]=\"residentdetails.id\" required>\n          </div>\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Name:</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" [(ngModel)]=\"residentdetails.name\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"surname\" class=\"form-label\">Surname:</label>\n          <input type=\"text\" class=\"form-control\" id=\"surname\" name=\"surname\" [(ngModel)]=\"residentdetails.surname\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"personalCode\" class=\"form-label\">Personal Code:</label>\n          <input type=\"text\" class=\"form-control\" id=\"personalCode\" name=\"personalCode\" [(ngModel)]=\"residentdetails.personalCode\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date of Birth:</label>\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" [(ngModel)]=\"residentdetails.dateOfBirth\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"phone\" class=\"form-label\">Phone:</label>\n          <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" [(ngModel)]=\"residentdetails.phone\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"residentdetails.email\" required>\n        </div>\n  \n        <div class=\"mb-3 form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"isOwner\" name=\"isOwner\" [(ngModel)]=\"residentdetails.isOwner\">\n          <label class=\"form-check-label\" for=\"isOwner\">Is Owner</label>\n        </div>\n        \n        <div class=\"mb-3 form-check apartmentidclass\">\n          <label for=\"apartmentId\" class=\"form-label\">ApartmentId:</label>\n          <select name=\"residentdetails.apartmentId\" class=\"form-select\" size=\"1\" [(ngModel)]=\"residentdetails.apartmentId\">\n            <option *ngFor=\"let apartment of apartments\" [value]=\"apartment.id\">{{ apartment.id }}</option>\n          </select>      \n        </div>\n      </form>\n    </div>\n    <button type=\"submit\" class=\"btn btn-info\" (click)=\"checkAndUpdateHouse(residentdetails)\">Save</button>\n    <button class=\"btn btn-danger\"  [disabled]=\"!(isManager)\" (click)=\"Delete(residentdetails.id)\">Delete</button>\n    <button class=\"btn btn-warning\"(click)=\"closeModalAndRefresh()\">Cancel</button>\n  </div>\n</ng-template>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}