{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/VladislavMihailov/source/repos/vladislavm-ui/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Validators } from '@angular/forms';\nimport jwtDecode from 'jwt-decode';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../Services/homes-api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/api-authorization/authorize.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"editModal\"];\nconst _c1 = [\"CreateModal\"];\nfunction ApartmentComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\")(21, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_tr_33_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const resident_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.openEditResidentModal(resident_r5.id));\n    });\n    i0.ɵɵtext(22, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const resident_r5 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.surname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.personalCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 10, resident_r5.dateOfBirth));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(resident_r5.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.isOwner ? \"Yes\" : \"No\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.apartmentId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.isManager || resident_r5.email === ctx_r0.currentUser));\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Id is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Surname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Personal Code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Date of Birth is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const apartment_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", apartment_r16.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(apartment_r16.id);\n  }\n}\nfunction ApartmentComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"Resident Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"form\", 7)(5, \"div\", 8)(6, \"label\", 9);\n    i0.ɵɵtext(7, \"Id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 10);\n    i0.ɵɵtemplate(9, ApartmentComponent_ng_template_35_div_9_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 12);\n    i0.ɵɵtext(12, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 13);\n    i0.ɵɵtemplate(14, ApartmentComponent_ng_template_35_div_14_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 14);\n    i0.ɵɵtext(17, \"Surname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 15);\n    i0.ɵɵtemplate(19, ApartmentComponent_ng_template_35_div_19_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 8)(21, \"label\", 16);\n    i0.ɵɵtext(22, \"Personal Code:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 17);\n    i0.ɵɵtemplate(24, ApartmentComponent_ng_template_35_div_24_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 8)(26, \"label\", 18);\n    i0.ɵɵtext(27, \"Date of Birth:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"input\", 19);\n    i0.ɵɵtemplate(29, ApartmentComponent_ng_template_35_div_29_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 8)(31, \"label\", 20);\n    i0.ɵɵtext(32, \"Phone:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(33, \"input\", 21);\n    i0.ɵɵtemplate(34, ApartmentComponent_ng_template_35_div_34_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 8)(36, \"label\", 22);\n    i0.ɵɵtext(37, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"input\", 23);\n    i0.ɵɵtemplate(39, ApartmentComponent_ng_template_35_div_39_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"div\", 24);\n    i0.ɵɵelement(41, \"input\", 25);\n    i0.ɵɵelementStart(42, \"label\", 26);\n    i0.ɵɵtext(43, \"Is Owner\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(44, \"div\", 27)(45, \"label\", 28);\n    i0.ɵɵtext(46, \"ApartmentId:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"select\", 29);\n    i0.ɵɵtemplate(48, ApartmentComponent_ng_template_35_option_48_Template, 2, 2, \"option\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(49, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_35_Template_button_click_49_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onFormSubmitEdit());\n    });\n    i0.ɵɵtext(50, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_35_Template_button_click_51_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.Delete());\n    });\n    i0.ɵɵtext(52, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_35_Template_button_click_53_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.closeModalAndRefresh());\n    });\n    i0.ɵɵtext(54, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    let tmp_7_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.ResidentEdit);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.ResidentEdit.get(\"id\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r2.ResidentEdit.get(\"id\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.ResidentEdit.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r2.ResidentEdit.get(\"name\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r2.ResidentEdit.get(\"surname\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r2.ResidentEdit.get(\"surname\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r2.ResidentEdit.get(\"personalCode\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r2.ResidentEdit.get(\"personalCode\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r2.ResidentEdit.get(\"dateOfBirth\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx_r2.ResidentEdit.get(\"dateOfBirth\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r2.ResidentEdit.get(\"phone\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx_r2.ResidentEdit.get(\"phone\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx_r2.ResidentEdit.get(\"email\")) == null ? null : tmp_7_0.hasError(\"required\")) && ((tmp_7_0 = ctx_r2.ResidentEdit.get(\"email\")) == null ? null : tmp_7_0.touched));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.apartments);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.isManager);\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Id is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Surname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Personal Code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Date of Birth is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const apartment_r29 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", apartment_r29.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(apartment_r29.id);\n  }\n}\nfunction ApartmentComponent_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"Resident Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 7)(4, \"div\", 8)(5, \"label\", 9);\n    i0.ɵɵtext(6, \"Id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 10);\n    i0.ɵɵtemplate(8, ApartmentComponent_ng_template_37_div_8_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 12);\n    i0.ɵɵtext(11, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 13);\n    i0.ɵɵtemplate(13, ApartmentComponent_ng_template_37_div_13_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 14);\n    i0.ɵɵtext(16, \"Surname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 15);\n    i0.ɵɵtemplate(18, ApartmentComponent_ng_template_37_div_18_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 16);\n    i0.ɵɵtext(21, \"Personal Code:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 17);\n    i0.ɵɵtemplate(23, ApartmentComponent_ng_template_37_div_23_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 8)(25, \"label\", 18);\n    i0.ɵɵtext(26, \"Date of Birth:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"input\", 19);\n    i0.ɵɵtemplate(28, ApartmentComponent_ng_template_37_div_28_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 8)(30, \"label\", 20);\n    i0.ɵɵtext(31, \"Phone:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 21);\n    i0.ɵɵtemplate(33, ApartmentComponent_ng_template_37_div_33_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 8)(35, \"label\", 22);\n    i0.ɵɵtext(36, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(37, \"input\", 23);\n    i0.ɵɵtemplate(38, ApartmentComponent_ng_template_37_div_38_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 24);\n    i0.ɵɵelement(40, \"input\", 25);\n    i0.ɵɵelementStart(41, \"label\", 26);\n    i0.ɵɵtext(42, \"Is Owner\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 27)(44, \"label\", 28);\n    i0.ɵɵtext(45, \"ApartmentId:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"select\", 35);\n    i0.ɵɵtemplate(47, ApartmentComponent_ng_template_37_option_47_Template, 2, 2, \"option\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_37_Template_button_click_48_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onFormSubmitCreate());\n    });\n    i0.ɵɵtext(49, \"Create\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_37_Template_button_click_50_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.closeModalAndRefresh());\n    });\n    i0.ɵɵtext(51, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    let tmp_7_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.ResidentCreate);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.ResidentCreate.get(\"id\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r4.ResidentCreate.get(\"id\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r4.ResidentCreate.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r4.ResidentCreate.get(\"name\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r4.ResidentCreate.get(\"surname\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r4.ResidentCreate.get(\"surname\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r4.ResidentCreate.get(\"personalCode\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r4.ResidentCreate.get(\"personalCode\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r4.ResidentCreate.get(\"dateOfBirth\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx_r4.ResidentCreate.get(\"dateOfBirth\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r4.ResidentCreate.get(\"phone\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx_r4.ResidentCreate.get(\"phone\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx_r4.ResidentCreate.get(\"email\")) == null ? null : tmp_7_0.hasError(\"required\")) && ((tmp_7_0 = ctx_r4.ResidentCreate.get(\"email\")) == null ? null : tmp_7_0.touched));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.apartments);\n  }\n}\nexport class ApartmentComponent {\n  constructor(modalService, houseService, route, router, formBuilder, AuthorizeService) {\n    this.modalService = modalService;\n    this.houseService = houseService;\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.AuthorizeService = AuthorizeService;\n    this.isManager = false;\n    this.isResident = false;\n    this.apartments = [];\n    this.activeModals = [];\n    this.residentdetails = {\n      id: 0,\n      name: '',\n      surname: '',\n      personalCode: '',\n      dateOfBirth: new Date(2000, 0, 1),\n      phone: '',\n      email: '',\n      isOwner: false,\n      apartmentId: 0\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.residentApartment();\n    this.initializeFormEdit();\n    this.initializeFormCreate();\n    this.getApartments();\n  }\n  initializeFormEdit() {\n    this.ResidentEdit = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n  initializeFormCreate() {\n    this.ResidentCreate = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n  openEditResidentModal(residentId) {\n    this.residentId = residentId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n    this.getResidentDetails(this.residentId).subscribe({\n      next: response => {\n        this.residentdetails = response;\n        this.ResidentEdit.patchValue({\n          id: response.id,\n          name: response.name,\n          surname: response.surname,\n          personalCode: response.personalCode,\n          dateOfBirth: response.dateOfBirth,\n          phone: response.phone,\n          email: response.email,\n          isOwner: response.isOwner,\n          apartmentId: response.apartmentId\n        });\n      }\n    });\n  }\n  residentApartment() {\n    this.route.params.subscribe(params => {\n      this.apartmentId = +params['id'];\n    });\n    this.getApartmentsResidents(this.apartmentId);\n    this.AuthorizeService.getUser().subscribe(data => {\n      if (data && data.name) {\n        this.currentUser = data.name;\n      }\n    });\n  }\n  openCreateResidentModal() {\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n  }\n  onFormSubmitEdit() {\n    if (this.ResidentEdit.valid) {\n      const formData = this.ResidentEdit.value;\n      const residentId = formData.id;\n      this.houseService.UpdateResident(residentId, formData).subscribe(response => {\n        this.closeModalAndRefresh();\n      });\n    }\n  }\n  onFormSubmitCreate() {\n    if (this.ResidentCreate.valid) {\n      const resdident = this.ResidentCreate.value;\n      this.houseService.CreateResident(resdident).subscribe();\n      this.closeModalAndRefresh();\n    }\n  }\n  getApartments() {\n    this.houseService.getAllApartments().subscribe(data => {\n      this.apartments = data;\n    });\n  }\n  getResidentDetails(residentId) {\n    return this.houseService.GetResidentById(residentId);\n  }\n  getApartmentsResidents(Apartmentid) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(residents => {\n      this.residents = residents;\n    });\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n  Delete() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const residentId = _this.ResidentEdit.get('id')?.value;\n      const result = _this.openConfirmationModal();\n      if (yield result) {\n        _this.deleteResident(_this.residentId);\n      } else {}\n    })();\n  }\n  deleteResident(residentId) {\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: response => {\n        this.closeModalAndRefresh();\n      }\n    });\n  }\n  openConfirmationModal() {\n    const modalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    this.activeModals.push(modalRef);\n    return modalRef.result.then(result => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigateByUrl('/', {\n      skipLocationChange: true\n    }).then(() => this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']));\n    location.reload();\n  }\n}\n_class = ApartmentComponent;\n_class.ɵfac = function ApartmentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.HomesApiService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.AuthorizeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-apartment\"]],\n  viewQuery: function ApartmentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editModal = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.CreateModal = _t.first);\n    }\n  },\n  decls: 39,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"table\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"editModal\", \"\"], [\"CreateModal\", \"\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"formControlName\", \"id\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger small\", 4, \"ngIf\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"surname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"surname\", \"formControlName\", \"surname\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"personalCode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"personalCode\", \"formControlName\", \"personalCode\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"formControlName\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone\", \"formControlName\", \"phone\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isOwner\", \"formControlName\", \"isOwner\", 1, \"form-check-input\"], [\"for\", \"isOwner\", 1, \"form-check-label\"], [1, \"mb-3\", \"form-check\", \"apartmentidclass\"], [\"for\", \"apartmentId\", 1, \"form-label\"], [\"name\", \"residentdetails.apartmentId\", \"size\", \"1\", \"formControlName\", \"apartmentId\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [1, \"text-danger\", \"small\"], [3, \"value\"], [\"name\", \"apartmentId\", \"size\", \"1\", \"formControlName\", \"apartmentId\", 1, \"form-select\"]],\n  template: function ApartmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 0);\n      i0.ɵɵelement(4, \"table\", 1);\n      i0.ɵɵelementStart(5, \"h2\");\n      i0.ɵɵtext(6, \"Residents \");\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ApartmentComponent_Template_button_click_7_listener() {\n        return ctx.openCreateResidentModal();\n      });\n      i0.ɵɵtext(8, \"Add Resident\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"table\", 1)(10, \"thead\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Personal Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Is Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"Apartment ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\");\n      i0.ɵɵtext(31, \"Edit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"tbody\");\n      i0.ɵɵtemplate(33, ApartmentComponent_tr_33_Template, 23, 12, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(34, \"div\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(35, ApartmentComponent_ng_template_35_Template, 55, 10, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(37, ApartmentComponent_ng_template_37_Template, 52, 9, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Apartment:\", ctx.residentdetails.apartmentId, \"\");\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngForOf\", ctx.residents);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i6.DatePipe],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n.apartmentidclass[_ngcontent-%COMP%]{\\n    margin: 10px;\\n    padding: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBhcnRtZW50L2FwYXJ0bWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG4uYXBhcnRtZW50aWRjbGFzc3tcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgcGFkZGluZzogMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Validators","jwtDecode","DeleteConfirmationModalComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ApartmentComponent_tr_33_Template_button_click_21_listener","restoredCtx","ɵɵrestoreView","_r7","resident_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","openEditResidentModal","id","ɵɵadvance","ɵɵtextInterpolate","name","surname","personalCode","ɵɵpipeBind1","dateOfBirth","phone","email","isOwner","apartmentId","ɵɵproperty","ctx_r0","isManager","currentUser","apartment_r16","ɵɵelement","ɵɵtemplate","ApartmentComponent_ng_template_35_div_9_Template","ApartmentComponent_ng_template_35_div_14_Template","ApartmentComponent_ng_template_35_div_19_Template","ApartmentComponent_ng_template_35_div_24_Template","ApartmentComponent_ng_template_35_div_29_Template","ApartmentComponent_ng_template_35_div_34_Template","ApartmentComponent_ng_template_35_div_39_Template","ApartmentComponent_ng_template_35_option_48_Template","ApartmentComponent_ng_template_35_Template_button_click_49_listener","_r18","ctx_r17","onFormSubmitEdit","ApartmentComponent_ng_template_35_Template_button_click_51_listener","ctx_r19","Delete","ApartmentComponent_ng_template_35_Template_button_click_53_listener","ctx_r20","closeModalAndRefresh","ctx_r2","ResidentEdit","tmp_1_0","get","hasError","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","apartments","apartment_r29","ApartmentComponent_ng_template_37_div_8_Template","ApartmentComponent_ng_template_37_div_13_Template","ApartmentComponent_ng_template_37_div_18_Template","ApartmentComponent_ng_template_37_div_23_Template","ApartmentComponent_ng_template_37_div_28_Template","ApartmentComponent_ng_template_37_div_33_Template","ApartmentComponent_ng_template_37_div_38_Template","ApartmentComponent_ng_template_37_option_47_Template","ApartmentComponent_ng_template_37_Template_button_click_48_listener","_r31","ctx_r30","onFormSubmitCreate","ApartmentComponent_ng_template_37_Template_button_click_50_listener","ctx_r32","ctx_r4","ResidentCreate","ApartmentComponent","constructor","modalService","houseService","route","router","formBuilder","AuthorizeService","isResident","activeModals","residentdetails","Date","ngOnInit","manager","residentApartment","initializeFormEdit","initializeFormCreate","getApartments","group","required","residentId","modalRef","open","editModal","push","getResidentDetails","subscribe","next","response","patchValue","params","getApartmentsResidents","getUser","data","openCreateResidentModal","CreateModal","valid","formData","value","UpdateResident","resdident","CreateResident","getAllApartments","GetResidentById","Apartmentid","GetApartmentsResident","residents","getAccessToken","userRole","token","role","_this","_asyncToGenerator","result","openConfirmationModal","deleteResident","DeleteResident","then","catch","forEach","dismiss","navigateByUrl","skipLocationChange","navigate","location","reload","ɵɵdirectiveInject","i1","NgbModal","i2","HomesApiService","i3","ActivatedRoute","Router","i4","FormBuilder","i5","selectors","viewQuery","ApartmentComponent_Query","rf","ctx","ApartmentComponent_Template_button_click_7_listener","ApartmentComponent_tr_33_Template","ApartmentComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","ApartmentComponent_ng_template_37_Template","ɵɵtextInterpolate1"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.html"],"sourcesContent":["\nimport { Apartment } from './../Models/apartment.model';\nimport { Resident } from './../Models/resident.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AuthorizeService, IUser } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport { Observable, map } from 'rxjs';\nimport { HouseDetailComponent } from '../house-detail/house-detail.component';\n\n\n@Component({\n  selector: 'app-apartment',\n  templateUrl: './apartment.component.html',\n  styleUrls: ['./apartment.component.css']\n})\n\n\n\n\nexport class ApartmentComponent implements OnInit {\n  @ViewChild('editModal') editModal!: ElementRef;\n  @ViewChild('CreateModal') CreateModal!: ElementRef;\n  ResidentEdit!:FormGroup;\n  ResidentCreate!:FormGroup;\n  apartmentId!: number;\n  residentId!: number;\n  isManager: boolean = false;\n  isResident: boolean = false;\n  apartments: Apartment[] = [];\n  activeModals: NgbModalRef[] = [];\n  residents!: Resident[];\n  currentUser: any;\n\n  residentdetails: Resident = {\n    id: 0,\n    name: '',\n    surname: '',\n    personalCode: '',\n    dateOfBirth: new Date(2000, 0, 1),\n    phone: '',\n    email: '',\n    isOwner: false,\n    apartmentId: 0\n  }\n  constructor(\n    public modalService: NgbModal,\n    private houseService: HomesApiService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private AuthorizeService: AuthorizeService,\n  ) { }\n\n  ngOnInit() {\n    this.manager();\n    this.residentApartment();\n    this.initializeFormEdit();\n    this.initializeFormCreate();\n    this.getApartments();\n   \n    \n  }\n  initializeFormEdit(){\n    this.ResidentEdit = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n  \n  initializeFormCreate(){\n    this.ResidentCreate = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n  openEditResidentModal(residentId: number) {\n    this.residentId = residentId;\n  const modalRef = this.modalService.open(this.editModal);\n  this.activeModals.push(modalRef);\n\n  this.getResidentDetails(this.residentId).subscribe({\n    next: (response: Resident) => {\n      this.residentdetails = response;\n      this.ResidentEdit.patchValue({\n        id: response.id,\n        name: response.name,\n        surname: response.surname,\n        personalCode: response.personalCode,\n        dateOfBirth: response.dateOfBirth,\n        phone: response.phone,\n        email: response.email,\n        isOwner: response.isOwner,\n        apartmentId: response.apartmentId\n      });\n    },\n  });\n  }\n\nresidentApartment(){\n  this.route.params.subscribe(params => {\n    this.apartmentId = +params['id'];\n  });\n  this.getApartmentsResidents(this.apartmentId);\n  this.AuthorizeService.getUser().subscribe(data => {\n    if (data && data.name) {\n      this.currentUser = data.name;\n    }\n  });\n}\n  openCreateResidentModal(){\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n  }\n\n\n  onFormSubmitEdit(){\n    if (this.ResidentEdit.valid) {\n      const formData = this.ResidentEdit.value;\n      const residentId = formData.id;\n      this.houseService.UpdateResident(residentId, formData).subscribe((response) => {\n        this.closeModalAndRefresh();\n      });\n    }\n  }\n  onFormSubmitCreate(){\n    if (this.ResidentCreate.valid) {\n      const resdident: Resident = this.ResidentCreate.value as Resident;\n      this.houseService.CreateResident(resdident).subscribe(\n      );\n      this.closeModalAndRefresh();\n    }\n  }\n\n\n  getApartments() {\n    this.houseService.getAllApartments().subscribe((data: Apartment[]) => {\n      this.apartments = data; \n    });\n  }\n\n  getResidentDetails(residentId: number) {\n    return this.houseService.GetResidentById(residentId);\n  }\n\n  getApartmentsResidents(Apartmentid: number) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(\n      (residents: Resident[]) => {\n        this.residents = residents;\n       \n      },\n    );\n  }\n\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n\n  async Delete() {\n    const residentId = this.ResidentEdit.get('id')?.value;\n    const result = this.openConfirmationModal();\n    if (await result) {\n      this.deleteResident(this.residentId)\n    } else {\n    }\n  }\n  deleteResident(residentId: number) {\n\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: (response) => {\n        this.closeModalAndRefresh();\n      }\n    })\n  }\n  openConfirmationModal(): Promise<boolean> {\n    const modalRef: NgbModalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    this.activeModals.push(modalRef);\n\n\n    return modalRef.result.then((result) => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n      this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']))\n      location.reload();\n  }\n   \n\n}\n","<div class=\"container\">\n  <h2>Apartment:{{residentdetails.apartmentId}}</h2>\n\n\n\n</div>\n<div class=\"container\">\n  <table class=\"table\">\n  </table>\n  <h2>Residents  <button class=\"btn btn-warning\"  (click)=\"openCreateResidentModal()\">Add Resident</button>\n  </h2>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Surname</th>\n        <th>Personal Code</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Email</th>\n        <th>Is Owner</th>\n        <th>Apartment ID</th>\n        <th>Edit</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let resident of residents\">\n        <td>{{ resident.id }}</td>\n        <td>{{ resident.name }}</td>\n        <td>{{ resident.surname }}</td>\n        <td>{{ resident.personalCode }}</td>\n        <td>{{ resident.dateOfBirth | date }}</td>\n        <td>{{ resident.phone }}</td>\n        <td>{{ resident.email }}</td>\n        <td>{{ resident.isOwner ? 'Yes' : 'No' }}</td>\n        <td>{{ resident.apartmentId }}</td>\n        <td>\n          <button class=\"btn btn-success\" [disabled]=\"!(isManager || resident.email === currentUser)\"\n            (click)=\"openEditResidentModal(resident.id)\">Edit</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div>\n  </div>\n</div>\n\n<ng-template #editModal>\n  <div class=\"container\">\n    <h2>Resident Details</h2>\n    <div>\n      <form [formGroup]=\"ResidentEdit\">\n        <div class=\"mb-3\">\n          <label for=\"id\" class=\"form-label\">Id:</label>\n          <input type=\"text\" class=\"form-control\" id=\"id\" formControlName=\"id\" required>\n          <div *ngIf=\"ResidentEdit.get('id')?.hasError('required') && ResidentEdit.get('id')?.touched\" class=\"text-danger small\">Id is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Name:</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" required>\n          <div *ngIf=\"ResidentEdit.get('name')?.hasError('required') && ResidentEdit.get('name')?.touched\" class=\"text-danger small\">Name is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"surname\" class=\"form-label\">Surname:</label>\n          <input type=\"text\" class=\"form-control\" id=\"surname\" formControlName=\"surname\" required>\n          <div *ngIf=\"ResidentEdit.get('surname')?.hasError('required') && ResidentEdit.get('surname')?.touched\" class=\"text-danger small\">Surname is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"personalCode\" class=\"form-label\">Personal Code:</label>\n          <input type=\"text\" class=\"form-control\" id=\"personalCode\" formControlName=\"personalCode\" required>\n          <div *ngIf=\"ResidentEdit.get('personalCode')?.hasError('required') && ResidentEdit.get('personalCode')?.touched\" class=\"text-danger small\">Personal Code is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date of Birth:</label>\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" formControlName=\"dateOfBirth\" required>\n          <div *ngIf=\"ResidentEdit.get('dateOfBirth')?.hasError('required') && ResidentEdit.get('dateOfBirth')?.touched\" class=\"text-danger small\">Date of Birth is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"phone\" class=\"form-label\">Phone:</label>\n          <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\" required>\n          <div *ngIf=\"ResidentEdit.get('phone')?.hasError('required') && ResidentEdit.get('phone')?.touched\" class=\"text-danger small\">Phone is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" required>\n          <div *ngIf=\"ResidentEdit.get('email')?.hasError('required') && ResidentEdit.get('email')?.touched\" class=\"text-danger small\">Email is required</div>\n        </div>\n        <div class=\"mb-3 form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"isOwner\" formControlName=\"isOwner\">\n          <label class=\"form-check-label\" for=\"isOwner\">Is Owner</label>\n        </div>\n        <div class=\"mb-3 form-check apartmentidclass\">\n          <label for=\"apartmentId\" class=\"form-label\">ApartmentId:</label>\n          <select name=\"residentdetails.apartmentId\" class=\"form-select\" size=\"1\" formControlName=\"apartmentId\">\n            <option *ngFor=\"let apartment of apartments\" [value]=\"apartment.id\">{{ apartment.id }}</option>\n          </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-info\" (click)=\"onFormSubmitEdit()\">Save</button>\n        <button class=\"btn btn-danger\" [disabled]=\"!(isManager)\" (click)=\"Delete()\">Delete</button>\n        <button class=\"btn btn-warning\" (click)=\"closeModalAndRefresh()\">Cancel</button>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n\n<ng-template #CreateModal>\n\n  <div class=\"container\">\n    <h2>Resident Details</h2>\n    <form [formGroup]=\"ResidentCreate\">\n      <div class=\"mb-3\">\n        <label for=\"id\" class=\"form-label\">Id:</label>\n        <input type=\"text\" class=\"form-control\" id=\"id\" formControlName=\"id\" required>\n        <div *ngIf=\"ResidentCreate.get('id')?.hasError('required') && ResidentCreate.get('id')?.touched\"\n             class=\"text-danger small\">Id is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" required>\n        <div *ngIf=\"ResidentCreate.get('name')?.hasError('required') && ResidentCreate.get('name')?.touched\"\n             class=\"text-danger small\">Name is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"surname\" class=\"form-label\">Surname:</label>\n        <input type=\"text\" class=\"form-control\" id=\"surname\" formControlName=\"surname\" required>\n        <div *ngIf=\"ResidentCreate.get('surname')?.hasError('required') && ResidentCreate.get('surname')?.touched\"\n             class=\"text-danger small\">Surname is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"personalCode\" class=\"form-label\">Personal Code:</label>\n        <input type=\"text\" class=\"form-control\" id=\"personalCode\" formControlName=\"personalCode\" required>\n        <div *ngIf=\"ResidentCreate.get('personalCode')?.hasError('required') && ResidentCreate.get('personalCode')?.touched\"\n             class=\"text-danger small\">Personal Code is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"dateOfBirth\" class=\"form-label\">Date of Birth:</label>\n        <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" formControlName=\"dateOfBirth\" required>\n        <div *ngIf=\"ResidentCreate.get('dateOfBirth')?.hasError('required') && ResidentCreate.get('dateOfBirth')?.touched\"\n             class=\"text-danger small\">Date of Birth is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"phone\" class=\"form-label\">Phone:</label>\n        <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\" required>\n        <div *ngIf=\"ResidentCreate.get('phone')?.hasError('required') && ResidentCreate.get('phone')?.touched\"\n             class=\"text-danger small\">Phone is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email:</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" required>\n        <div *ngIf=\"ResidentCreate.get('email')?.hasError('required') && ResidentCreate.get('email')?.touched\"\n             class=\"text-danger small\">Email is required</div>\n      </div>\n      <div class=\"mb-3 form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"isOwner\" formControlName=\"isOwner\">\n        <label class=\"form-check-label\" for=\"isOwner\">Is Owner</label>\n      </div>\n      <div class=\"mb-3 form-check apartmentidclass\">\n        <label for=\"apartmentId\" class=\"form-label\">ApartmentId:</label>\n        <select name=\"apartmentId\" class=\"form-select\" size=\"1\" formControlName=\"apartmentId\">\n          <option *ngFor=\"let apartment of apartments\" [value]=\"apartment.id\">{{ apartment.id }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-info\" (click)=\"onFormSubmitCreate()\">Create</button>\n      <button class=\"btn btn-warning\" (click)=\"closeModalAndRefresh()\">Cancel</button>\n    </form>\n  </div>\n</ng-template>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}