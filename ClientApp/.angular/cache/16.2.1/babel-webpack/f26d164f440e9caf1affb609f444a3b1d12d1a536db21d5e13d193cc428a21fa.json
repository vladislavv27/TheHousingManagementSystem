{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/VladislavMihailov/source/repos/vladislavm-ui/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { EventEmitter } from '@angular/core';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../Services/homes-api.service\";\nimport * as i4 from \"src/api-authorization/authorize.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction ResdidentDetailComponent_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const resident_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", resident_r2.apartmentId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(resident_r2.apartmentId);\n  }\n}\nexport class ResdidentDetailComponent {\n  constructor(activeModal, router, modalService, houseService, AuthorizeService) {\n    this.activeModal = activeModal;\n    this.router = router;\n    this.modalService = modalService;\n    this.houseService = houseService;\n    this.AuthorizeService = AuthorizeService;\n    this.residents = [];\n    this.showEditModal = false;\n    this.isManager = false;\n    this.isResident = false;\n    this.residentdetails = {\n      id: 0,\n      name: '',\n      surname: '',\n      personalCode: '',\n      dateOfBirth: new Date(2000, 0, 1),\n      phone: '',\n      email: '',\n      isOwner: false,\n      apartmentId: 0\n    };\n    this.closeEvent = new EventEmitter();\n  }\n  ngOnInit() {\n    this.manager();\n    if (this.residentId) {\n      this.getResidentDetails(this.residentId).subscribe({\n        next: response => {\n          this.residentdetails = response;\n        }\n      });\n    }\n    ;\n  }\n  getResidentDetails(residentId) {\n    return this.houseService.GetResidentById(residentId);\n  }\n  getResidents() {\n    this.houseService.getAllResidents().subscribe(data => {\n      // Assuming that data is a single Resident object, not an array\n      this.residents = [data]; // Wrap the single Resident in an array\n    }, error => {\n      // Handle error if necessary\n      console.error('Error fetching resident:', error);\n    });\n  }\n  checkAndUpdateHouse(resdident) {\n    const houseNumberToCheck = resdident.personalCode;\n    this.houseService.doesResidentExistByNumber(houseNumberToCheck, resdident.apartmentId).subscribe(exists => {\n      if (exists) {\n        this.houseService.UpdateResident(this.residentdetails.id, this.residentdetails).subscribe({\n          next: response => {\n            this.closeModalAndRefresh();\n          }\n        });\n      } else if (!exists && this.isManager) {\n        this.houseService.CreateResident(this.residentdetails).subscribe({\n          next: createdHouse => {\n            this.closeModalAndRefresh();\n          }\n        });\n      }\n      this.closeModalAndRefresh();\n    });\n  }\n  Delete(resdidentid) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const result = _this.openConfirmationModal();\n      if (yield result) {\n        _this.deleteResident(resdidentid);\n      } else {}\n    })();\n  }\n  deleteResident(residentId) {\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: response => {\n        this.closeModalAndRefresh();\n      }\n    });\n  }\n  openConfirmationModal() {\n    const modalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    return modalRef.result.then(result => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModal.close();\n    this.router.navigateByUrl('/', {\n      skipLocationChange: true\n    }).then(() => this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']));\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n}\n_class = ResdidentDetailComponent;\n_class.ɵfac = function ResdidentDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbActiveModal), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i3.HomesApiService), i0.ɵɵdirectiveInject(i4.AuthorizeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-resdident-detail\"]],\n  inputs: {\n    residentId: \"residentId\"\n  },\n  decls: 50,\n  vars: 12,\n  consts: [[1, \"container\"], [\"form\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"name\", \"id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"surname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"surname\", \"name\", \"surname\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"personalCode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"personalCode\", \"name\", \"personalCode\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone\", \"name\", \"phone\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isOwner\", \"name\", \"isOwner\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"isOwner\", 1, \"form-check-label\"], [\"for\", \"apartmentId\", 1, \"form-label\"], [\"size\", \"1\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"id\", \"apartmentId\", \"name\", \"apartmentId\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [3, \"value\"]],\n  template: function ResdidentDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Resident Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\")(4, \"form\", null, 1)(6, \"div\", 2)(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Id:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.residentdetails.id = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 3);\n      i0.ɵɵtext(12, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.residentdetails.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Surname:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.residentdetails.surname = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\", 8);\n      i0.ɵɵtext(20, \"Personal Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.residentdetails.personalCode = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 10);\n      i0.ɵɵtext(24, \"Date of Birth:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.residentdetails.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"label\", 12);\n      i0.ɵɵtext(28, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.residentdetails.phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 2)(31, \"label\", 14);\n      i0.ɵɵtext(32, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.residentdetails.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 16)(35, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.residentdetails.isOwner = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"label\", 18);\n      i0.ɵɵtext(37, \"Is Owner\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 16)(39, \"label\", 19);\n      i0.ɵɵtext(40, \"apartmentId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"select\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_select_ngModelChange_41_listener($event) {\n        return ctx.residentdetails.apartmentId = $event;\n      });\n      i0.ɵɵtemplate(42, ResdidentDetailComponent_option_42_Template, 2, 2, \"option\", 21);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"input\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function ResdidentDetailComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.residentdetails.apartmentId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function ResdidentDetailComponent_Template_button_click_44_listener() {\n        return ctx.checkAndUpdateHouse(ctx.residentdetails);\n      });\n      i0.ɵɵtext(45, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function ResdidentDetailComponent_Template_button_click_46_listener() {\n        return ctx.Delete(ctx.residentdetails.id);\n      });\n      i0.ɵɵtext(47, \"Delete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function ResdidentDetailComponent_Template_button_click_48_listener() {\n        return ctx.closeModalAndRefresh();\n      });\n      i0.ɵɵtext(49, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.surname);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.personalCode);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.dateOfBirth);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.phone);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.isOwner);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.apartmentId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.residents);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.residentdetails.apartmentId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.isManager);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.CheckboxControlValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm],\n  styles: [\"*[_ngcontent-%COMP%]{\\n    margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvTW9kYWxMb2dzL3Jlc2RpZGVudC1kZXRhaWwvcmVzZGlkZW50LWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIip7XG4gICAgbWFyZ2luOiAxMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["EventEmitter","DeleteConfirmationModalComponent","jwtDecode","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","resident_r2","apartmentId","ɵɵadvance","ɵɵtextInterpolate","ResdidentDetailComponent","constructor","activeModal","router","modalService","houseService","AuthorizeService","residents","showEditModal","isManager","isResident","residentdetails","id","name","surname","personalCode","dateOfBirth","Date","phone","email","isOwner","closeEvent","ngOnInit","manager","residentId","getResidentDetails","subscribe","next","response","GetResidentById","getResidents","getAllResidents","data","error","console","checkAndUpdateHouse","resdident","houseNumberToCheck","doesResidentExistByNumber","exists","UpdateResident","closeModalAndRefresh","CreateResident","createdHouse","Delete","resdidentid","_this","_asyncToGenerator","result","openConfirmationModal","deleteResident","DeleteResident","modalRef","open","then","catch","close","navigateByUrl","skipLocationChange","navigate","getAccessToken","userRole","token","role","ɵɵdirectiveInject","i1","NgbActiveModal","i2","Router","NgbModal","i3","HomesApiService","i4","selectors","inputs","decls","vars","consts","template","ResdidentDetailComponent_Template","rf","ctx","ɵɵlistener","ResdidentDetailComponent_Template_input_ngModelChange_9_listener","$event","ResdidentDetailComponent_Template_input_ngModelChange_13_listener","ResdidentDetailComponent_Template_input_ngModelChange_17_listener","ResdidentDetailComponent_Template_input_ngModelChange_21_listener","ResdidentDetailComponent_Template_input_ngModelChange_25_listener","ResdidentDetailComponent_Template_input_ngModelChange_29_listener","ResdidentDetailComponent_Template_input_ngModelChange_33_listener","ResdidentDetailComponent_Template_input_ngModelChange_35_listener","ResdidentDetailComponent_Template_select_ngModelChange_41_listener","ɵɵtemplate","ResdidentDetailComponent_option_42_Template","ResdidentDetailComponent_Template_input_ngModelChange_43_listener","ResdidentDetailComponent_Template_button_click_44_listener","ResdidentDetailComponent_Template_button_click_46_listener","ResdidentDetailComponent_Template_button_click_48_listener"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\ModalLogs\\resdident-detail\\resdident-detail.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\ModalLogs\\resdident-detail\\resdident-detail.component.html"],"sourcesContent":["import { Resident } from '../../Models/resident.model';\nimport { Component, EventEmitter, Input } from '@angular/core';\nimport { NgbActiveModal, NgbModal, NgbModalRef, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HomesApiService } from '../../Services/homes-api.service';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport { AuthorizeService } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\n\n@Component({\n  selector: 'app-resdident-detail',\n  templateUrl: './resdident-detail.component.html',\n  styleUrls: ['./resdident-detail.component.css']\n})\nexport class ResdidentDetailComponent {\n\n  @Input() residentId: number | undefined;\n  residents: Resident[] = [];\n  showEditModal: boolean = false;\n  modalRef!: NgbModalRef;\n  isManager: boolean = false;\n  isResident: boolean = false;\n  residentdetails: Resident = {\n    id: 0,\n    name: '',\n    surname: '',\n    personalCode: '',\n    dateOfBirth: new Date(2000, 0, 1),\n    phone: '',\n    email: '',\n    isOwner: false,\n    apartmentId: 0\n  }\n  public closeEvent: EventEmitter<string> = new EventEmitter();\n\n  constructor(\n\n    public activeModal: NgbActiveModal,\n    private router: Router,\n    private modalService: NgbModal,\n    private houseService: HomesApiService,\n    private AuthorizeService: AuthorizeService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.manager();\n    if (this.residentId) {\n      this.getResidentDetails(this.residentId).subscribe({\n        next: (response: Resident) => {\n          this.residentdetails = response;\n        }\n      });\n    };\n\n  }\n  getResidentDetails(residentId: number) {\n    return this.houseService.GetResidentById(residentId);\n  }\n  getResidents() {\n    this.houseService.getAllResidents().subscribe(\n      (data: Resident) => {\n        // Assuming that data is a single Resident object, not an array\n        this.residents = [data]; // Wrap the single Resident in an array\n      },\n      (error: any) => {\n        // Handle error if necessary\n        console.error('Error fetching resident:', error);\n      }\n    );\n  }\n  \n\n  checkAndUpdateHouse(resdident: Resident) {\n    const houseNumberToCheck = resdident.personalCode;\n    this.houseService.doesResidentExistByNumber(houseNumberToCheck, resdident.apartmentId).subscribe((exists) => {\n      if (exists) {\n        this.houseService.UpdateResident(this.residentdetails.id, this.residentdetails).subscribe({\n          next: (response) => {\n            this.closeModalAndRefresh();\n          }\n        });\n      } else if (!exists && this.isManager) {\n        this.houseService.CreateResident(this.residentdetails).subscribe({\n          next: (createdHouse) => {\n            this.closeModalAndRefresh();\n          }\n        });\n      }\n\n      this.closeModalAndRefresh();\n    });\n  }\n\n\n  async Delete(resdidentid: number) {\n    const result = this.openConfirmationModal();\n    if (await result) {\n      this.deleteResident(resdidentid)\n    } else {\n    }\n  }\n  deleteResident(residentId: number) {\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: (response) => {\n        this.closeModalAndRefresh();\n      }\n    })\n  }\n  openConfirmationModal(): Promise<boolean> {\n    const modalRef: NgbModalRef = this.modalService.open(DeleteConfirmationModalComponent);\n\n    return modalRef.result.then((result) => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n\n  closeModalAndRefresh() {\n    this.activeModal.close();\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n      this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']))\n  }\n\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n}\n","\n<div class=\"container\">\n    <h2>Resident Details</h2>\n    <div>\n      <form #form=\"ngForm\">\n        <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Id:</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" [(ngModel)]=\"residentdetails.id\" required>\n          </div>\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Name:</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" [(ngModel)]=\"residentdetails.name\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"surname\" class=\"form-label\">Surname:</label>\n          <input type=\"text\" class=\"form-control\" id=\"surname\" name=\"surname\" [(ngModel)]=\"residentdetails.surname\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"personalCode\" class=\"form-label\">Personal Code:</label>\n          <input type=\"text\" class=\"form-control\" id=\"personalCode\" name=\"personalCode\" [(ngModel)]=\"residentdetails.personalCode\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date of Birth:</label>\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" [(ngModel)]=\"residentdetails.dateOfBirth\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"phone\" class=\"form-label\">Phone:</label>\n          <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" [(ngModel)]=\"residentdetails.phone\" required>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"residentdetails.email\" required>\n        </div>\n        <div class=\"mb-3 form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"isOwner\" name=\"isOwner\" [(ngModel)]=\"residentdetails.isOwner\">\n          <label class=\"form-check-label\" for=\"isOwner\">Is Owner</label>\n        </div>\n        <div class=\"mb-3 form-check\">\n            <label for=\"apartmentId\" class=\"form-label\">apartmentId</label>\n            <select class=\"form-select\" size=\"1\" [(ngModel)]=\"residentdetails.apartmentId\">\n              <option *ngFor=\"let resident of residents\" [value]=\"resident.apartmentId\">{{ resident.apartmentId }}</option>\n            </select>\n                      \n          </div>\n          <input type=\"number\" class=\"form-control form-control-sm\" id=\"apartmentId\" name=\"apartmentId\" [(ngModel)]=\"residentdetails.apartmentId\">\n\n        <button type=\"submit\" class=\"btn btn-info\" (click)=\"checkAndUpdateHouse(residentdetails)\">Save</button>\n        <button class=\"btn btn-danger\"  [disabled]=\"!(isManager)\" (click)=\"Delete(residentdetails.id)\">Delete</button>\n        <button class=\"btn btn-warning\"(click)=\"closeModalAndRefresh()\">Cancel</button>\n      </form>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}