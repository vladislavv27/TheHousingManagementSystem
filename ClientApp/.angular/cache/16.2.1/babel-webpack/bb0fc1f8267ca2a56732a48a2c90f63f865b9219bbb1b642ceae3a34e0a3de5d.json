{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/VladislavMihailov/source/repos/vladislavm-ui/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Validators } from '@angular/forms';\nimport jwtDecode from 'jwt-decode';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../Services/homes-api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/api-authorization/authorize.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"editModal\"];\nconst _c1 = [\"CreateModal\"];\nfunction ApartmentComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\")(21, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_tr_33_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const resident_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.openEditResidentModal(resident_r5.id));\n    });\n    i0.ɵɵtext(22, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const resident_r5 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.surname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.personalCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 10, resident_r5.dateOfBirth));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(resident_r5.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.isOwner ? \"Yes\" : \"No\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resident_r5.apartmentId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.isManager || resident_r5.email === ctx_r0.currentUser));\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Surname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Personal Code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Date of Birth is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_35_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const apartment_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", apartment_r15.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(apartment_r15.id);\n  }\n}\nfunction ApartmentComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"Resident Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"form\", 7)(5, \"div\", 8)(6, \"label\", 9);\n    i0.ɵɵtext(7, \"Id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 11);\n    i0.ɵɵtext(11, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 12);\n    i0.ɵɵtemplate(13, ApartmentComponent_ng_template_35_div_13_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 14);\n    i0.ɵɵtext(16, \"Surname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 15);\n    i0.ɵɵtemplate(18, ApartmentComponent_ng_template_35_div_18_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 16);\n    i0.ɵɵtext(21, \"Personal Code:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 17);\n    i0.ɵɵtemplate(23, ApartmentComponent_ng_template_35_div_23_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 8)(25, \"label\", 18);\n    i0.ɵɵtext(26, \"Date of Birth:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"input\", 19);\n    i0.ɵɵtemplate(28, ApartmentComponent_ng_template_35_div_28_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 8)(30, \"label\", 20);\n    i0.ɵɵtext(31, \"Phone:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 21);\n    i0.ɵɵtemplate(33, ApartmentComponent_ng_template_35_div_33_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 8)(35, \"label\", 22);\n    i0.ɵɵtext(36, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(37, \"input\", 23);\n    i0.ɵɵtemplate(38, ApartmentComponent_ng_template_35_div_38_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 24);\n    i0.ɵɵelement(40, \"input\", 25);\n    i0.ɵɵelementStart(41, \"label\", 26);\n    i0.ɵɵtext(42, \"Is Owner\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 27)(44, \"label\", 28);\n    i0.ɵɵtext(45, \"ApartmentId:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"select\", 29);\n    i0.ɵɵtemplate(47, ApartmentComponent_ng_template_35_option_47_Template, 2, 2, \"option\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_35_Template_button_click_48_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onFormSubmitEdit());\n    });\n    i0.ɵɵtext(49, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_35_Template_button_click_50_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.Delete());\n    });\n    i0.ɵɵtext(51, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_35_Template_button_click_52_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.closeModalAndRefresh());\n    });\n    i0.ɵɵtext(53, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    let tmp_7_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.ResidentEdit);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.ResidentEdit.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r2.ResidentEdit.get(\"name\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r2.ResidentEdit.get(\"surname\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r2.ResidentEdit.get(\"surname\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r2.ResidentEdit.get(\"personalCode\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r2.ResidentEdit.get(\"personalCode\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r2.ResidentEdit.get(\"dateOfBirth\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx_r2.ResidentEdit.get(\"dateOfBirth\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r2.ResidentEdit.get(\"phone\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx_r2.ResidentEdit.get(\"phone\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx_r2.ResidentEdit.get(\"email\")) == null ? null : tmp_7_0.hasError(\"required\")) && ((tmp_7_0 = ctx_r2.ResidentEdit.get(\"email\")) == null ? null : tmp_7_0.touched));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.apartments);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.isManager);\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Id is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Surname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Personal Code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Date of Birth is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentComponent_ng_template_37_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const apartment_r28 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", apartment_r28.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(apartment_r28.id);\n  }\n}\nfunction ApartmentComponent_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n    i0.ɵɵtext(2, \"Resident Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 7)(4, \"div\", 8)(5, \"label\", 9);\n    i0.ɵɵtext(6, \"Id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 35);\n    i0.ɵɵtemplate(8, ApartmentComponent_ng_template_37_div_8_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 11);\n    i0.ɵɵtext(11, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 12);\n    i0.ɵɵtemplate(13, ApartmentComponent_ng_template_37_div_13_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 14);\n    i0.ɵɵtext(16, \"Surname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 15);\n    i0.ɵɵtemplate(18, ApartmentComponent_ng_template_37_div_18_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 16);\n    i0.ɵɵtext(21, \"Personal Code:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 17);\n    i0.ɵɵtemplate(23, ApartmentComponent_ng_template_37_div_23_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 8)(25, \"label\", 18);\n    i0.ɵɵtext(26, \"Date of Birth:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"input\", 19);\n    i0.ɵɵtemplate(28, ApartmentComponent_ng_template_37_div_28_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 8)(30, \"label\", 20);\n    i0.ɵɵtext(31, \"Phone:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 21);\n    i0.ɵɵtemplate(33, ApartmentComponent_ng_template_37_div_33_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 8)(35, \"label\", 22);\n    i0.ɵɵtext(36, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(37, \"input\", 23);\n    i0.ɵɵtemplate(38, ApartmentComponent_ng_template_37_div_38_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 24);\n    i0.ɵɵelement(40, \"input\", 25);\n    i0.ɵɵelementStart(41, \"label\", 26);\n    i0.ɵɵtext(42, \"Is Owner\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 27)(44, \"label\", 28);\n    i0.ɵɵtext(45, \"ApartmentId:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"select\", 36);\n    i0.ɵɵtemplate(47, ApartmentComponent_ng_template_37_option_47_Template, 2, 2, \"option\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_37_Template_button_click_48_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onFormSubmitCreate());\n    });\n    i0.ɵɵtext(49, \"Create\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ApartmentComponent_ng_template_37_Template_button_click_50_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.closeModalAndRefresh());\n    });\n    i0.ɵɵtext(51, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    let tmp_7_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.ResidentCreate);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.ResidentCreate.get(\"id\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r4.ResidentCreate.get(\"id\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r4.ResidentCreate.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r4.ResidentCreate.get(\"name\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r4.ResidentCreate.get(\"surname\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r4.ResidentCreate.get(\"surname\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r4.ResidentCreate.get(\"personalCode\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r4.ResidentCreate.get(\"personalCode\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r4.ResidentCreate.get(\"dateOfBirth\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx_r4.ResidentCreate.get(\"dateOfBirth\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r4.ResidentCreate.get(\"phone\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx_r4.ResidentCreate.get(\"phone\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx_r4.ResidentCreate.get(\"email\")) == null ? null : tmp_7_0.hasError(\"required\")) && ((tmp_7_0 = ctx_r4.ResidentCreate.get(\"email\")) == null ? null : tmp_7_0.touched));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.apartments);\n  }\n}\nexport class ApartmentComponent {\n  constructor(modalService, houseService, route, router, formBuilder, AuthorizeService) {\n    this.modalService = modalService;\n    this.houseService = houseService;\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.AuthorizeService = AuthorizeService;\n    this.isManager = false;\n    this.isResident = false;\n    this.apartments = [];\n    this.activeModals = [];\n    this.residentdetails = {\n      id: 0,\n      name: '',\n      surname: '',\n      personalCode: '',\n      dateOfBirth: new Date(2000, 0, 1),\n      phone: '',\n      email: '',\n      isOwner: false,\n      apartmentId: 0\n    };\n  }\n  ngOnInit() {\n    this.manager();\n    this.UserResidentsCheck();\n    this.initializeFormEdit();\n    this.initializeFormCreate();\n    this.getApartments();\n  }\n  initializeFormEdit() {\n    this.ResidentEdit = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n  initializeFormCreate() {\n    this.ResidentCreate = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n  openEditResidentModal(residentId) {\n    this.residentId = residentId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n    this.getResidentDetails(this.residentId).subscribe({\n      next: response => {\n        this.residentdetails = response;\n        this.ResidentEdit.patchValue({\n          id: response.id,\n          name: response.name,\n          surname: response.surname,\n          personalCode: response.personalCode,\n          dateOfBirth: response.dateOfBirth,\n          phone: response.phone,\n          email: response.email,\n          isOwner: response.isOwner,\n          apartmentId: response.apartmentId\n        });\n      }\n    });\n  }\n  UserResidentsCheck() {\n    this.AuthorizeService.getUser().subscribe(data => {\n      if (data && data.name) {\n        this.currentUser = data.name;\n      }\n    });\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null && !this.isManager) {\n        const token = jwtDecode(userRole);\n        const residentId = token.residentid;\n        this.houseService.GetResidentById(residentId).subscribe(resident => {\n          this.residents = [resident];\n        });\n      } else {\n        this.residentApartment();\n      }\n    });\n  }\n  residentApartment() {\n    this.route.params.subscribe(params => {\n      this.apartmentId = +params['id'];\n    });\n    this.getApartmentsResidents(this.apartmentId);\n  }\n  openCreateResidentModal() {\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n  }\n  onFormSubmitEdit() {\n    if (this.ResidentEdit.valid) {\n      this.AuthorizeService.getAccessToken().subscribe(accessToken => {\n        if (accessToken !== null) {\n          const formData = this.ResidentEdit.value;\n          const residentIdToUpdate = formData.id;\n          this.houseService.UpdateResident(residentIdToUpdate, formData, accessToken).subscribe(response => {\n            this.closeModalAndRefresh();\n          });\n        }\n      });\n    }\n  }\n  onFormSubmitCreate() {\n    if (this.ResidentCreate.valid) {\n      const resident = this.ResidentCreate.value;\n      this.houseService.CreateResident(resident).subscribe();\n      this.closeModalAndRefresh();\n    }\n  }\n  getApartments() {\n    this.houseService.getAllApartments().subscribe(data => {\n      this.apartments = data;\n    });\n  }\n  getResidentDetails(residentId) {\n    return this.houseService.GetResidentById(residentId);\n  }\n  getApartmentsResidents(Apartmentid) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(residents => {\n      this.residents = residents;\n    });\n  }\n  manager() {\n    this.AuthorizeService.getAccessToken().subscribe(userRole => {\n      if (userRole !== null) {\n        const token = jwtDecode(userRole);\n        const role = token.role;\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n  Delete() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const residentId = _this.ResidentEdit.get('id')?.value;\n      const result = _this.openConfirmationModal();\n      if (yield result) {\n        _this.deleteResident(_this.residentId);\n      } else {}\n    })();\n  }\n  deleteResident(residentId) {\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: response => {\n        this.closeModalAndRefresh();\n      }\n    });\n  }\n  openConfirmationModal() {\n    const modalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    this.activeModals.push(modalRef);\n    return modalRef.result.then(result => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigateByUrl('/', {\n      skipLocationChange: true\n    }).then(() => this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']));\n    location.reload();\n  }\n}\n_class = ApartmentComponent;\n_class.ɵfac = function ApartmentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.HomesApiService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.AuthorizeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-apartment\"]],\n  viewQuery: function ApartmentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editModal = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.CreateModal = _t.first);\n    }\n  },\n  decls: 39,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"table\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"editModal\", \"\"], [\"CreateModal\", \"\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"formControlName\", \"id\", 1, \"form-control\", 3, \"disabled\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger small\", 4, \"ngIf\"], [\"for\", \"surname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"surname\", \"formControlName\", \"surname\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"personalCode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"personalCode\", \"formControlName\", \"personalCode\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"formControlName\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone\", \"formControlName\", \"phone\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isOwner\", \"formControlName\", \"isOwner\", 1, \"form-check-input\"], [\"for\", \"isOwner\", 1, \"form-check-label\"], [1, \"mb-3\", \"form-check\", \"apartmentidclass\"], [\"for\", \"apartmentId\", 1, \"form-label\"], [\"name\", \"residentdetails.apartmentId\", \"size\", \"1\", \"formControlName\", \"apartmentId\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [1, \"text-danger\", \"small\"], [3, \"value\"], [\"type\", \"text\", \"id\", \"id\", \"formControlName\", \"id\", \"required\", \"\", 1, \"form-control\"], [\"name\", \"apartmentId\", \"size\", \"1\", \"formControlName\", \"apartmentId\", 1, \"form-select\"]],\n  template: function ApartmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Apartment:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 0);\n      i0.ɵɵelement(4, \"table\", 1);\n      i0.ɵɵelementStart(5, \"h2\");\n      i0.ɵɵtext(6, \"Residents \");\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ApartmentComponent_Template_button_click_7_listener() {\n        return ctx.openCreateResidentModal();\n      });\n      i0.ɵɵtext(8, \"Add Resident\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"table\", 1)(10, \"thead\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Personal Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Is Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"Apartment ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\");\n      i0.ɵɵtext(31, \"Edit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"tbody\");\n      i0.ɵɵtemplate(33, ApartmentComponent_tr_33_Template, 23, 12, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(34, \"div\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(35, ApartmentComponent_ng_template_35_Template, 54, 10, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(37, ApartmentComponent_ng_template_37_Template, 52, 9, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"ngForOf\", ctx.residents);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i6.DatePipe],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n.apartmentidclass[_ngcontent-%COMP%]{\\n    margin: 10px;\\n    padding: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBhcnRtZW50L2FwYXJ0bWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG4uYXBhcnRtZW50aWRjbGFzc3tcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgcGFkZGluZzogMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Validators","jwtDecode","DeleteConfirmationModalComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ApartmentComponent_tr_33_Template_button_click_21_listener","restoredCtx","ɵɵrestoreView","_r7","resident_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","openEditResidentModal","id","ɵɵadvance","ɵɵtextInterpolate","name","surname","personalCode","ɵɵpipeBind1","dateOfBirth","phone","email","isOwner","apartmentId","ɵɵproperty","ctx_r0","isManager","currentUser","apartment_r15","ɵɵelement","ɵɵtemplate","ApartmentComponent_ng_template_35_div_13_Template","ApartmentComponent_ng_template_35_div_18_Template","ApartmentComponent_ng_template_35_div_23_Template","ApartmentComponent_ng_template_35_div_28_Template","ApartmentComponent_ng_template_35_div_33_Template","ApartmentComponent_ng_template_35_div_38_Template","ApartmentComponent_ng_template_35_option_47_Template","ApartmentComponent_ng_template_35_Template_button_click_48_listener","_r17","ctx_r16","onFormSubmitEdit","ApartmentComponent_ng_template_35_Template_button_click_50_listener","ctx_r18","Delete","ApartmentComponent_ng_template_35_Template_button_click_52_listener","ctx_r19","closeModalAndRefresh","ctx_r2","ResidentEdit","tmp_2_0","get","hasError","touched","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","apartments","apartment_r28","ApartmentComponent_ng_template_37_div_8_Template","ApartmentComponent_ng_template_37_div_13_Template","ApartmentComponent_ng_template_37_div_18_Template","ApartmentComponent_ng_template_37_div_23_Template","ApartmentComponent_ng_template_37_div_28_Template","ApartmentComponent_ng_template_37_div_33_Template","ApartmentComponent_ng_template_37_div_38_Template","ApartmentComponent_ng_template_37_option_47_Template","ApartmentComponent_ng_template_37_Template_button_click_48_listener","_r30","ctx_r29","onFormSubmitCreate","ApartmentComponent_ng_template_37_Template_button_click_50_listener","ctx_r31","ctx_r4","ResidentCreate","tmp_1_0","ApartmentComponent","constructor","modalService","houseService","route","router","formBuilder","AuthorizeService","isResident","activeModals","residentdetails","Date","ngOnInit","manager","UserResidentsCheck","initializeFormEdit","initializeFormCreate","getApartments","group","required","residentId","modalRef","open","editModal","push","getResidentDetails","subscribe","next","response","patchValue","getUser","data","getAccessToken","userRole","token","residentid","GetResidentById","resident","residents","residentApartment","params","getApartmentsResidents","openCreateResidentModal","CreateModal","valid","accessToken","formData","value","residentIdToUpdate","UpdateResident","CreateResident","getAllApartments","Apartmentid","GetApartmentsResident","role","_this","_asyncToGenerator","result","openConfirmationModal","deleteResident","DeleteResident","then","catch","forEach","dismiss","navigateByUrl","skipLocationChange","navigate","location","reload","ɵɵdirectiveInject","i1","NgbModal","i2","HomesApiService","i3","ActivatedRoute","Router","i4","FormBuilder","i5","selectors","viewQuery","ApartmentComponent_Query","rf","ctx","ApartmentComponent_Template_button_click_7_listener","ApartmentComponent_tr_33_Template","ApartmentComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","ApartmentComponent_ng_template_37_Template"],"sources":["C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.ts","C:\\Users\\VladislavMihailov\\source\\repos\\vladislavm-ui\\ClientApp\\src\\app\\apartment\\apartment.component.html"],"sourcesContent":["\nimport { Apartment } from './../Models/apartment.model';\nimport { Resident } from './../Models/resident.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HomesApiService } from '../Services/homes-api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AuthorizeService, IUser } from 'src/api-authorization/authorize.service';\nimport jwtDecode from 'jwt-decode';\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\n\n\n@Component({\n  selector: 'app-apartment',\n  templateUrl: './apartment.component.html',\n  styleUrls: ['./apartment.component.css']\n})\n\n\n\n\nexport class ApartmentComponent implements OnInit {\n  @ViewChild('editModal') editModal!: ElementRef;\n  @ViewChild('CreateModal') CreateModal!: ElementRef;\n  ResidentEdit!: FormGroup;\n  ResidentCreate!: FormGroup;\n  apartmentId!: number;\n  residentId!: number;\n  isManager: boolean = false;\n  isResident: boolean = false;\n  apartments: Apartment[] = [];\n  activeModals: NgbModalRef[] = [];\n  residents!: Resident[];\n  currentUser: any;\n\n  residentdetails: Resident = {\n    id: 0,\n    name: '',\n    surname: '',\n    personalCode: '',\n    dateOfBirth: new Date(2000, 0, 1),\n    phone: '',\n    email: '',\n    isOwner: false,\n    apartmentId: 0\n  }\n  constructor(\n    public modalService: NgbModal,\n    private houseService: HomesApiService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private AuthorizeService: AuthorizeService,\n  ) { }\n\n  ngOnInit() {\n    this.manager();\n    this.UserResidentsCheck();\n    this.initializeFormEdit();\n    this.initializeFormCreate();\n    this.getApartments();\n\n\n  }\n  initializeFormEdit() {\n    this.ResidentEdit = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n\n  initializeFormCreate() {\n    this.ResidentCreate = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      personalCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n      isOwner: [false],\n      apartmentId: ['']\n    });\n  }\n  openEditResidentModal(residentId: number) {\n    this.residentId = residentId;\n    const modalRef = this.modalService.open(this.editModal);\n    this.activeModals.push(modalRef);\n\n    this.getResidentDetails(this.residentId).subscribe({\n      next: (response: Resident) => {\n        this.residentdetails = response;\n        this.ResidentEdit.patchValue({\n          id: response.id,\n          name: response.name,\n          surname: response.surname,\n          personalCode: response.personalCode,\n          dateOfBirth: response.dateOfBirth,\n          phone: response.phone,\n          email: response.email,\n          isOwner: response.isOwner,\n          apartmentId: response.apartmentId\n        });\n      },\n    });\n  }\n  UserResidentsCheck() {\n    this.AuthorizeService.getUser().subscribe(data => {\n      if (data && data.name) {\n        this.currentUser = data.name;\n      }\n    });\n    this.AuthorizeService.getAccessToken().subscribe(\n      (userRole: string | null) => {\n        if (userRole !== null && !this.isManager) {\n          const token: any = jwtDecode(userRole);\n          const residentId = token.residentid;\n          this.houseService.GetResidentById(residentId).subscribe((resident: Resident) => {\n            this.residents = [resident];\n          });\n      \n        }\n        else{\n          this.residentApartment();\n        }\n      }\n    );\n    \n  }\n  \n  \n  \n  residentApartment() {\n    this.route.params.subscribe(params => {\n      this.apartmentId = +params['id'];\n    });\n    this.getApartmentsResidents(this.apartmentId);\n  \n\n  }\n  openCreateResidentModal() {\n    const modalRef = this.modalService.open(this.CreateModal);\n    this.activeModals.push(modalRef);\n  }\n\n\n\n  onFormSubmitEdit() {\n    if (this.ResidentEdit.valid) {\n    this.AuthorizeService.getAccessToken().subscribe(\n      (accessToken: string | null) => {\n        if (accessToken !== null) {\n         const formData = this.ResidentEdit.value;\n          const residentIdToUpdate = formData.id;\n         \n          this.houseService.UpdateResident(residentIdToUpdate, formData,accessToken).subscribe((response) => {\n            this.closeModalAndRefresh();\n          });\n        }\n      }\n    );\n    }\n    }\n  \n  onFormSubmitCreate() {\n\n    if (this.ResidentCreate.valid) {\n      const resident: Resident = this.ResidentCreate.value as Resident;\n      this.houseService.CreateResident(resident).subscribe(\n      );\n      this.closeModalAndRefresh();\n    }\n  }\n\n\n  getApartments() {\n    this.houseService.getAllApartments().subscribe((data: Apartment[]) => {\n      this.apartments = data;\n    });\n  }\n\n  getResidentDetails(residentId: number) {\n    return this.houseService.GetResidentById(residentId);\n  }\n\n  getApartmentsResidents(Apartmentid: number) {\n    this.houseService.GetApartmentsResident(Apartmentid).subscribe(\n      (residents: Resident[]) => {\n        this.residents = residents;\n\n      },\n    );\n  }\n\n  manager(): void {\n    this.AuthorizeService.getAccessToken().subscribe((userRole: string | null) => {\n      if (userRole !== null) {\n        const token: any = jwtDecode(userRole);\n        const role = token.role;\n\n        this.isManager = role === 'Manager';\n        this.isResident = role === 'Resident';\n       \n      } else {\n        this.isManager = false;\n        this.isResident = false;\n      }\n    });\n  }\n\n\n  async Delete() {\n    const residentId = this.ResidentEdit.get('id')?.value;\n    const result = this.openConfirmationModal();\n    if (await result) {\n      this.deleteResident(this.residentId)\n    } else {\n    }\n  }\n  deleteResident(residentId: number) {\n\n    this.houseService.DeleteResident(residentId).subscribe({\n      next: (response) => {\n        this.closeModalAndRefresh();\n      }\n    })\n  }\n  openConfirmationModal(): Promise<boolean> {\n    const modalRef: NgbModalRef = this.modalService.open(DeleteConfirmationModalComponent);\n    this.activeModals.push(modalRef);\n\n\n    return modalRef.result.then((result) => {\n      return result === true;\n    }).catch(() => {\n      return false;\n    });\n  }\n  closeModalAndRefresh() {\n    this.activeModals.forEach(modalRef => {\n      modalRef.dismiss();\n    });\n    this.activeModals = [];\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n      this.router.navigate(['apartments/' + this.residentdetails.apartmentId + '/residents']))\n    location.reload();\n  }\n\n\n}\n","<div class=\"container\">\n  <h2>Apartment:</h2>\n\n</div>\n<div class=\"container\">\n  <table class=\"table\">\n  </table>\n  <h2>Residents <button class=\"btn btn-warning\" (click)=\"openCreateResidentModal()\">Add Resident</button>\n  </h2>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Surname</th>\n        <th>Personal Code</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Email</th>\n        <th>Is Owner</th>\n        <th>Apartment ID</th>\n        <th>Edit</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let resident of residents\">\n        <td>{{ resident.id }}</td>\n        <td>{{ resident.name }}</td>\n        <td>{{ resident.surname }}</td>\n        <td>{{ resident.personalCode }}</td>\n        <td>{{ resident.dateOfBirth | date }}</td>\n        <td>{{ resident.phone }}</td>\n        <td>{{ resident.email }}</td>\n        <td>{{ resident.isOwner ? 'Yes' : 'No' }}</td>\n        <td>{{ resident.apartmentId }}</td>\n        <td>\n          <button class=\"btn btn-success\" [disabled]=\"!(isManager || resident.email === currentUser)\"\n            (click)=\"openEditResidentModal(resident.id)\">Edit</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div>\n  </div>\n</div>\n\n<ng-template #editModal>\n  <div class=\"container\">\n    <h2>Resident Details</h2>\n    <div>\n      <form [formGroup]=\"ResidentEdit\">\n        <div class=\"mb-3\">\n          <label for=\"id\" class=\"form-label\">Id:</label>\n          <input type=\"text\" class=\"form-control\" id=\"id\" [disabled]=\"true\" formControlName=\"id\">\n          \n        </div>\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Name:</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" required>\n          <div *ngIf=\"ResidentEdit.get('name')?.hasError('required') && ResidentEdit.get('name')?.touched\"\n            class=\"text-danger small\">Name is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"surname\" class=\"form-label\">Surname:</label>\n          <input type=\"text\" class=\"form-control\" id=\"surname\" formControlName=\"surname\" required>\n          <div *ngIf=\"ResidentEdit.get('surname')?.hasError('required') && ResidentEdit.get('surname')?.touched\"\n            class=\"text-danger small\">Surname is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"personalCode\" class=\"form-label\">Personal Code:</label>\n          <input type=\"text\" class=\"form-control\" id=\"personalCode\" formControlName=\"personalCode\" required>\n          <div\n            *ngIf=\"ResidentEdit.get('personalCode')?.hasError('required') && ResidentEdit.get('personalCode')?.touched\"\n            class=\"text-danger small\">Personal Code is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date of Birth:</label>\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" formControlName=\"dateOfBirth\" required>\n          <div *ngIf=\"ResidentEdit.get('dateOfBirth')?.hasError('required') && ResidentEdit.get('dateOfBirth')?.touched\"\n            class=\"text-danger small\">Date of Birth is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"phone\" class=\"form-label\">Phone:</label>\n          <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\" required>\n          <div *ngIf=\"ResidentEdit.get('phone')?.hasError('required') && ResidentEdit.get('phone')?.touched\"\n            class=\"text-danger small\">Phone is required</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" required>\n          <div *ngIf=\"ResidentEdit.get('email')?.hasError('required') && ResidentEdit.get('email')?.touched\"\n            class=\"text-danger small\">Email is required</div>\n        </div>\n        <div class=\"mb-3 form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"isOwner\" formControlName=\"isOwner\">\n          <label class=\"form-check-label\" for=\"isOwner\">Is Owner</label>\n        </div>\n        <div class=\"mb-3 form-check apartmentidclass\">\n          <label for=\"apartmentId\" class=\"form-label\">ApartmentId:</label>\n          <select name=\"residentdetails.apartmentId\" class=\"form-select\" size=\"1\" formControlName=\"apartmentId\">\n            <option *ngFor=\"let apartment of apartments\" [value]=\"apartment.id\">{{ apartment.id }}</option>\n          </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-info\" (click)=\"onFormSubmitEdit()\">Save</button>\n        <button class=\"btn btn-danger\" [disabled]=\"!(isManager)\" (click)=\"Delete()\">Delete</button>\n        <button class=\"btn btn-warning\" (click)=\"closeModalAndRefresh()\">Cancel</button>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n\n<ng-template #CreateModal>\n\n  <div class=\"container\">\n    <h2>Resident Details</h2>\n    <form [formGroup]=\"ResidentCreate\">\n      <div class=\"mb-3\">\n        <label for=\"id\" class=\"form-label\">Id:</label>\n        <input type=\"text\" class=\"form-control\" id=\"id\" formControlName=\"id\" required >\n        <div *ngIf=\"ResidentCreate.get('id')?.hasError('required') && ResidentCreate.get('id')?.touched\"\n          class=\"text-danger small\">Id is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" required>\n        <div *ngIf=\"ResidentCreate.get('name')?.hasError('required') && ResidentCreate.get('name')?.touched\"\n          class=\"text-danger small\">Name is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"surname\" class=\"form-label\">Surname:</label>\n        <input type=\"text\" class=\"form-control\" id=\"surname\" formControlName=\"surname\" required>\n        <div *ngIf=\"ResidentCreate.get('surname')?.hasError('required') && ResidentCreate.get('surname')?.touched\"\n          class=\"text-danger small\">Surname is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"personalCode\" class=\"form-label\">Personal Code:</label>\n        <input type=\"text\" class=\"form-control\" id=\"personalCode\" formControlName=\"personalCode\" required>\n        <div\n          *ngIf=\"ResidentCreate.get('personalCode')?.hasError('required') && ResidentCreate.get('personalCode')?.touched\"\n          class=\"text-danger small\">Personal Code is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"dateOfBirth\" class=\"form-label\">Date of Birth:</label>\n        <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" formControlName=\"dateOfBirth\" required>\n        <div\n          *ngIf=\"ResidentCreate.get('dateOfBirth')?.hasError('required') && ResidentCreate.get('dateOfBirth')?.touched\"\n          class=\"text-danger small\">Date of Birth is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"phone\" class=\"form-label\">Phone:</label>\n        <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\" required>\n        <div *ngIf=\"ResidentCreate.get('phone')?.hasError('required') && ResidentCreate.get('phone')?.touched\"\n          class=\"text-danger small\">Phone is required</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email:</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" required>\n        <div *ngIf=\"ResidentCreate.get('email')?.hasError('required') && ResidentCreate.get('email')?.touched\"\n          class=\"text-danger small\">Email is required</div>\n      </div>\n      <div class=\"mb-3 form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"isOwner\" formControlName=\"isOwner\">\n        <label class=\"form-check-label\" for=\"isOwner\">Is Owner</label>\n      </div>\n      <div class=\"mb-3 form-check apartmentidclass\">\n        <label for=\"apartmentId\" class=\"form-label\">ApartmentId:</label>\n        <select name=\"apartmentId\" class=\"form-select\" size=\"1\" formControlName=\"apartmentId\">\n          <option *ngFor=\"let apartment of apartments\" [value]=\"apartment.id\">{{ apartment.id }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-info\" (click)=\"onFormSubmitCreate()\">Create</button>\n      <button class=\"btn btn-warning\" (click)=\"closeModalAndRefresh()\">Cancel</button>\n    </form>\n  </div>\n</ng-template>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}